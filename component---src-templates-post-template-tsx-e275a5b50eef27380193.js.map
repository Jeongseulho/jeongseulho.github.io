{"version":3,"file":"component---src-templates-post-template-tsx-e275a5b50eef27380193.js","mappings":"+LA8EA,UAlD2D,SAAAA,GAIrC,IAJ+C,KACnEC,EAAI,YACJC,EAAW,SACXC,GACkBH,EAClB,MAAM,SAAEI,EAAQ,KAAEC,GAASH,GAEzBI,MAAM,KACJC,EACAC,aAAa,MACXC,EAAK,QACLC,EAAO,KACPC,EAAI,KACJC,EACAC,WACEC,iBAAiB,gBAAEC,GAAiB,UACpCC,GACD,QACDC,EAAO,aACPC,KAGFjB,EAAKkB,kBAAkBC,MAAM,GAEjC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CACTC,KAAMC,EAAAA,EAAAA,MACNC,KAAM,CACJhB,QACAiB,YAAahB,EACbiB,IAAKxB,EAASyB,KACdC,MAAOb,KAGTK,EAAAA,EAAAA,IAACS,EAAAA,EAAU,MACTT,EAAAA,EAAAA,IAACU,EAAAA,EAAW,CAACtB,MAAOA,EAAOE,KAAMA,KACjCU,EAAAA,EAAAA,IAACW,EAAAA,EAAW,CAACzB,KAAMA,EAAMM,UAAWE,KACpCM,EAAAA,EAAAA,IAACY,EAAAA,EAAa,CACZ7B,SAAUA,EACVC,KAAMA,EACNO,KAAMA,EACNK,QAASA,EACTC,aAAcA,KAEhBG,EAAAA,EAAAA,IAACa,EAAAA,EAAa,OAItB,C","sources":["webpack://seulog/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport BaseLayout from 'layout/BaseLayout';\r\nimport PostLayout from 'layout/PostLayout';\r\nimport ContentHead from 'components/Detail/ContentHead';\r\nimport ContentBody from 'components/Detail/ContentBody';\r\nimport CommentWidget from 'components/Detail/CommentWidget';\r\nimport ContentFooter from 'components/Detail/ContentFooter';\r\nimport { PostPageItemType, PageContextType } from 'types/Post.types';\r\nimport { graphql } from 'gatsby';\r\nimport { PATH } from 'routes/path';\r\n\r\ntype PostTemplateProps = {\r\n  path: string;\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[];\r\n    };\r\n  };\r\n  pageContext: {\r\n    slug: string;\r\n    previous: PageContextType | null;\r\n    next: PageContextType | null;\r\n  };\r\n  location: {\r\n    href: string;\r\n  };\r\n};\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data,\r\n  pageContext,\r\n  location,\r\n}: PostTemplateProps) {\r\n  const { previous, next } = pageContext;\r\n  const {\r\n    node: {\r\n      html,\r\n      frontmatter: {\r\n        title,\r\n        summary,\r\n        date,\r\n        tags,\r\n        thumbnail: {\r\n          childImageSharp: { gatsbyImageData },\r\n          publicURL,\r\n        },\r\n        sources,\r\n        sources_link,\r\n      },\r\n    },\r\n  } = data.allMarkdownRemark.edges[0];\r\n\r\n  return (\r\n    <BaseLayout\r\n      path={PATH.index}\r\n      meta={{\r\n        title,\r\n        description: summary,\r\n        url: location.href,\r\n        image: publicURL,\r\n      }}\r\n    >\r\n      <PostLayout>\r\n        <ContentHead title={title} date={date} />\r\n        <ContentBody html={html} thumbnail={gatsbyImageData} />\r\n        <ContentFooter\r\n          previous={previous}\r\n          next={next}\r\n          tags={tags}\r\n          sources={sources}\r\n          sources_link={sources_link}\r\n        />\r\n        <CommentWidget />\r\n      </PostLayout>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          tableOfContents\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY년 MM월 DD일\")\r\n            tags\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n            sources\r\n            sources_link\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","data","pageContext","location","previous","next","node","html","frontmatter","title","summary","date","tags","thumbnail","childImageSharp","gatsbyImageData","publicURL","sources","sources_link","allMarkdownRemark","edges","___EmotionJSX","BaseLayout","path","PATH","meta","description","url","href","image","PostLayout","ContentHead","ContentBody","ContentFooter","CommentWidget"],"sourceRoot":""}