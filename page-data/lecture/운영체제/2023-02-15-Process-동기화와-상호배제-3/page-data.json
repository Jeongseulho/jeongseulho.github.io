{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/운영체제/2023-02-15-Process-동기화와-상호배제-3/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"hw를-이용하여-me-구현\" style=\"position:relative;\"><a href=\"#hw%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-me-%EA%B5%AC%ED%98%84\" aria-label=\"hw를 이용하여 me 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌HW를 이용하여 ME 구현</h2>\n<h3 id=\"testandset-instruction\" style=\"position:relative;\"><a href=\"#testandset-instruction\" aria-label=\"testandset instruction permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖TestAndSet instruction</h3>\n<ul>\n<li>Test, Set을 한번에 하는 기계어</li>\n<li>machine instruction\n<ul>\n<li>실행 중 인터럽트 받지 않음, preemption 되지않음</li>\n</ul>\n</li>\n<li>단, 3개이상의 프로세스에대해 bounded waiting 위배</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"68188368234432995000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`boolean TestAndSet (boolean *target) {\r\n\tboolean temp = *target;\r\n    *target = true;\r\n    return temp;\r\n}`, `68188368234432995000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">boolean</span> <span class=\"token class-name\">TestAndSet</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> <span class=\"token operator\">*</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">boolean</span> temp <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>target<span class=\"token punctuation\">;</span>\r\n    <span class=\"token operator\">*</span>target <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/5e457ee7-4873-40d7-85fa-295d49c97e19/image.png\" alt=\"\"></p>\n<h3 id=\"n-process-me\" style=\"position:relative;\"><a href=\"#n-process-me\" aria-label=\"n process me permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖N-process ME</h3>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/23bfcfd4-a684-4dbb-91dd-780204adcf13/image.png\" alt=\"\"></p>\n<h2 id=\"️hw-solution-of-me-특징\" style=\"position:relative;\"><a href=\"#%EF%B8%8Fhw-solution-of-me-%ED%8A%B9%EC%A7%95\" aria-label=\"️hw solution of me 특징 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❗️HW solution of ME 특징</h2>\n<ul>\n<li>구현 쉬움</li>\n<li>busy waiting 문제</li>\n</ul>\n<h2 id=\"os를-이용하여-me-구현\" style=\"position:relative;\"><a href=\"#os%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-me-%EA%B5%AC%ED%98%84\" aria-label=\"os를 이용하여 me 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌OS를 이용하여 ME 구현</h2>\n<h3 id=\"spinlock\" style=\"position:relative;\"><a href=\"#spinlock\" aria-label=\"spinlock permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖spinLock</h3>\n<ul>\n<li>S 초기화, P(), V() 연산으로만 접근 가능 (정수형 변수 S)</li>\n<li>위 연산들은 atomic 즉, preemption 되지않게 OS가 보장</li>\n<li>멀티 프로세서에서만 사용 가능</li>\n<li>busy waiting</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"14584361288760260000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`P(S) { // 문 잠그기\r\n\twhile (S<=0) do\r\n    endWhile;\r\n    S = S-1\r\n}\r\n\r\nV(S) { // 잠금 풀기\r\n\tS = S+1\r\n}`, `14584361288760260000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">P</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 문 잠그기</span>\r\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\r\n    endWhile<span class=\"token punctuation\">;</span>\r\n    <span class=\"token class-name\">S</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">S</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token class-name\">V</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 잠금 풀기</span>\r\n\t<span class=\"token class-name\">S</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">S</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/cb416c13-cdc5-4c28-ab62-fd786f8c740e/image.png\" alt=\"\"></p>\n<h3 id=\"semaphore\" style=\"position:relative;\"><a href=\"#semaphore\" aria-label=\"semaphore permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖semaphore</h3>\n<ul>\n<li>S 초기화, P(), V() 연산으로만 접근 가능 (정수형 변수 S)</li>\n<li>위 연산들은 atomic 즉, preemption 되지않게 OS가 보장</li>\n<li>차이점 : S변수에 대응하는 ready queue 할당</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"58484376891644090000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`P(S) {\r\n\tif (S>0)\r\n    then S = S - 1;\r\n    else wait on the queue;\r\n}\r\n\r\nV(S) {\r\n\tif (waiting process on queue)\r\n    then wake up one of them;\r\n    else S = S + 1;\r\n}`, `58484376891644090000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">P</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n    then <span class=\"token class-name\">S</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">S</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">else</span> wait on the queue<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token class-name\">V</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">S</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>waiting process on queue<span class=\"token punctuation\">)</span>\r\n    then wake up one of them<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token class-name\">S</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">S</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"binary-semaphore\" style=\"position:relative;\"><a href=\"#binary-semaphore\" aria-label=\"binary semaphore permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>binary semaphore</h3>\n<ul>\n<li>S가 0 또는 1</li>\n<li>ME, 동기화 목적으로 사용</li>\n</ul>\n<h3 id=\"counting-semaphore\" style=\"position:relative;\"><a href=\"#counting-semaphore\" aria-label=\"counting semaphore permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>counting semaphore</h3>\n<ul>\n<li>S가 0이상의 정수값 가질 수 있음</li>\n<li>producer - consumer 문제 해결</li>\n</ul>\n<h3 id=\"semaphore로-해결-가능한-문제들\" style=\"position:relative;\"><a href=\"#semaphore%EB%A1%9C-%ED%95%B4%EA%B2%B0-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AC%B8%EC%A0%9C%EB%93%A4\" aria-label=\"semaphore로 해결 가능한 문제들 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📚semaphore로 해결 가능한 문제들</h3>\n<ul>\n<li>상호배제 문제</li>\n<li>프로세스 동기화 문제</li>\n<li>생산자-소비자 문제</li>\n<li>Reader-writer 문제</li>\n<li>Dining philosopher problem</li>\n</ul>\n<h3 id=\"프로세스-동기화-문제\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"프로세스 동기화 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스 동기화 문제</h3>\n<ul>\n<li>프로세스의 실행 순서 맞추기</li>\n<li>프로세스들은 병행적이며, 비동기적으로 수행\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/eb1d870f-4cdc-4c49-9372-716302e3d3a9/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"생산자-소비자-문제\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%82%B0%EC%9E%90-%EC%86%8C%EB%B9%84%EC%9E%90-%EB%AC%B8%EC%A0%9C\" aria-label=\"생산자 소비자 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생산자-소비자 문제</h3>\n<ul>\n<li>\n<p>생산자(Producer) 프로세스</p>\n<ul>\n<li>컴파일러 : 어셈블리 코드 생성</li>\n<li>어셈블러 : 적재 모듈 생성</li>\n</ul>\n</li>\n<li>\n<p>소비자(Consumer) 프로세스</p>\n<ul>\n<li>컴파일러 : 어셈블리 코드 생성</li>\n<li>어셈블러 : 적재 모듈 생성</li>\n</ul>\n</li>\n<li>\n<p>producer-consumer with single buffer\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/72e5cafe-25e9-4fd4-bcc4-2b7c7295475e/image.png\" alt=\"\"></p>\n</li>\n<li>\n<p>producer-consumer with N-buffer\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/ffc94042-58c6-41de-8f8c-161895c74a84/image.png\" alt=\"\"></p>\n</li>\n</ul>\n<h3 id=\"reader-writer-문제\" style=\"position:relative;\"><a href=\"#reader-writer-%EB%AC%B8%EC%A0%9C\" aria-label=\"reader writer 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reader-writer 문제</h3>\n<ul>\n<li>Reader : 데이터 읽기 연산 수행</li>\n<li>Writer : 데이터 갱신 연산 수행</li>\n</ul>\n<ol>\n<li>Reader들은 동시에 데이터 접근 가능</li>\n<li>Writer들은 동시에 데이터 접근 불가</li>\n<li>Reader, Writer은 동시에 데이터 접근 불가\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/69069d8f-39d2-4ffc-9f92-9b701ccaee5b/image.png\" alt=\"\"></li>\n</ol>\n<h3 id=\"️semaphore-특징\" style=\"position:relative;\"><a href=\"#%EF%B8%8Fsemaphore-%ED%8A%B9%EC%A7%95\" aria-label=\"️semaphore 특징 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❗️Semaphore 특징</h3>\n<ul>\n<li>No busy waiting : 기다려야하는 프로세스는 block상태로 기다림</li>\n<li>semaphaore queue에 대한 wake-up 순서는 비결정적 즉, starvation problem</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#hw%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-me-%EA%B5%AC%ED%98%84\">📌HW를 이용하여 ME 구현</a></p>\n<ul>\n<li><a href=\"#testandset-instruction\">📖TestAndSet instruction</a></li>\n<li><a href=\"#n-process-me\">📖N-process ME</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8Fhw-solution-of-me-%ED%8A%B9%EC%A7%95\">❗️HW solution of ME 특징</a></p>\n</li>\n<li>\n<p><a href=\"#os%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-me-%EA%B5%AC%ED%98%84\">📌OS를 이용하여 ME 구현</a></p>\n<ul>\n<li><a href=\"#spinlock\">📖spinLock</a></li>\n<li><a href=\"#semaphore\">📖semaphore</a></li>\n<li><a href=\"#binary-semaphore\">binary semaphore</a></li>\n<li><a href=\"#counting-semaphore\">counting semaphore</a></li>\n<li><a href=\"#semaphore%EB%A1%9C-%ED%95%B4%EA%B2%B0-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%AC%B8%EC%A0%9C%EB%93%A4\">📚semaphore로 해결 가능한 문제들</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%8F%99%EA%B8%B0%ED%99%94-%EB%AC%B8%EC%A0%9C\">프로세스 동기화 문제</a></li>\n<li><a href=\"#%EC%83%9D%EC%82%B0%EC%9E%90-%EC%86%8C%EB%B9%84%EC%9E%90-%EB%AC%B8%EC%A0%9C\">생산자-소비자 문제</a></li>\n<li><a href=\"#reader-writer-%EB%AC%B8%EC%A0%9C\">Reader-writer 문제</a></li>\n<li><a href=\"#%EF%B8%8Fsemaphore-%ED%8A%B9%EC%A7%95\">❗️Semaphore 특징</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Process 동기화와 상호배제 3","date":"2023년 02월 14일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/운영체제/2023-02-15-Process-동기화와-상호배제-3/","previous":{"fields":{"slug":"/lecture/운영체제/2023-01-24-Process-동기화와-상호배제-1/"},"frontmatter":{"categories":["운영체제"],"title":"Process 동기화와 상호배제 1","date":"2023-01-24 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/운영체제/2023-02-16-Process-동기화와-상호배제-4/"},"frontmatter":{"categories":["운영체제"],"title":"Process 동기화와 상호배제 4","date":"2023-02-16 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}