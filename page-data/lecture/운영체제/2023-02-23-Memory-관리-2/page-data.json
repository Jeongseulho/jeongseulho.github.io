{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/운영체제/2023-02-23-Memory-관리-2/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"continuous-memory-allocation\" style=\"position:relative;\"><a href=\"#continuous-memory-allocation\" aria-label=\"continuous memory allocation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌continuous memory allocation</h2>\n<ul>\n<li>프로세스(context)를 하나의 연속된 메모리 공간에 할당\n<ul>\n<li>프로그램, 데이터, 스택</li>\n</ul>\n</li>\n<li>고려해야할 점\n<ul>\n<li>메모리에 동시에 올라갈 수 있는 프로세스 수</li>\n<li>각 프로세스에게 할당 되는 메모리 공간크기</li>\n<li>메모리 분할 방법</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"uni-programming\" style=\"position:relative;\"><a href=\"#uni-programming\" aria-label=\"uni programming permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌uni-programming</h2>\n<ul>\n<li>하나의 프로세스만 메모리 상에 존재</li>\n<li>programing degree = 1</li>\n</ul>\n<h2 id=\"유니-프로그래밍-문제점\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%88-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"유니 프로그래밍 문제점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❌유니 프로그래밍 문제점</h2>\n<ul>\n<li>프로그램 크기 > 메모리 크기일때, 해결법\n<ul>\n<li>overlay structure : 메모리에 현재 필요한 영역만 적재하는 것</li>\n<li>사용자가 프로그램의 흐름 및 자료구조를 모두 알아야 함</li>\n</ul>\n</li>\n<li>커널 보호, 해결법\n<ul>\n<li>경계 레지스터 사용</li>\n</ul>\n</li>\n<li>low system resource utilization</li>\n<li>low system performance</li>\n<li>위의 자원 활용도, 성능 문제 해결 위해 multi-programming</li>\n</ul>\n<h2 id=\"multi-programing\" style=\"position:relative;\"><a href=\"#multi-programing\" aria-label=\"multi programing permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌multi-programing</h2>\n<h3 id=\"fixed-partition-multi-programming\" style=\"position:relative;\"><a href=\"#fixed-partition-multi-programming\" aria-label=\"fixed partition multi programming permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖fixed partition multi-programming</h3>\n<ul>\n<li>메모리 공간을 고정된 크기로 분할\n<ul>\n<li>이미 분할 해놓음</li>\n</ul>\n</li>\n<li>편한 메모리 관리</li>\n<li>각 프로세스는 하나의 partition에 적재</li>\n<li>partition의 수 = multiprogramming degree <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/7d1d29c7-0ae2-4644-9630-64748a10fb0b/image.png\" alt=\"\"></li>\n<li>커널 및 사용자 영역 보호\n<ul>\n<li>boundary register, boundary address사용으로 각 partition을 침범하지 않게 구분, 커널을 보호</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"fragmentation-단편화-발생\" style=\"position:relative;\"><a href=\"#fragmentation-%EB%8B%A8%ED%8E%B8%ED%99%94-%EB%B0%9C%EC%83%9D\" aria-label=\"fragmentation 단편화 발생 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❌fragmentation 단편화 발생</h3>\n<ul>\n<li>\n<p>internal fragmentation</p>\n<ul>\n<li>partition 크기 > 내부 process 크기로 메모리 남는 부분 발생</li>\n</ul>\n</li>\n<li>\n<p>external fragmentation</p>\n<ul>\n<li>남은 메모리 크기 > 들어오려는 process크기 인데도 진입 못하는 현상 발생(각 partiton에 조금씩 남아 있어서 합치면 많이 남아있는데도 사용 못함)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"variable-partition-multi-programming\" style=\"position:relative;\"><a href=\"#variable-partition-multi-programming\" aria-label=\"variable partition multi programming permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖variable partition multi-programming</h3>\n<ul>\n<li>초기에 전체가 하나의 영역</li>\n<li>프로세스 처리하는 과정에서 메모리 공간을 동적 분할</li>\n<li>no internal fragmentation <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/9ebb8949-6235-47bb-8f89-116fd1fdbcfb/image.png\" alt=\"\"> <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/6660a485-4c08-4277-a0a5-acc2b5cf1e53/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"남은-공간이-여러군데인데-어디에-배치할까\" style=\"position:relative;\"><a href=\"#%EB%82%A8%EC%9D%80-%EA%B3%B5%EA%B0%84%EC%9D%B4-%EC%97%AC%EB%9F%AC%EA%B5%B0%EB%8D%B0%EC%9D%B8%EB%8D%B0-%EC%96%B4%EB%94%94%EC%97%90-%EB%B0%B0%EC%B9%98%ED%95%A0%EA%B9%8C\" aria-label=\"남은 공간이 여러군데인데 어디에 배치할까 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❓남은 공간이 여러군데인데 어디에 배치할까</h3>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/160e8c69-2754-460b-854f-c8815b2fa6ad/image.png\" alt=\"\"></p>\n<h3 id=\"배치-전략\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%B9%98-%EC%A0%84%EB%9E%B5\" aria-label=\"배치 전략 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔧배치 전략</h3>\n<ul>\n<li>first fit : 최초 적합\n<ul>\n<li>탐색하면서 처음으로 만난 충분한 공간의 partition 선택</li>\n</ul>\n</li>\n<li>best fit : 최적 적합\n<ul>\n<li>가능 공간의 partition중 가장 작은 곳 선택</li>\n<li>탐색이 오래 걸림</li>\n<li>크기가 큰 partition유지 가능</li>\n<li>작은 크기의 partition이 너무 많이 발생(활용 못할 정도의)</li>\n</ul>\n</li>\n<li>worst fit : 최악 적합\n<ul>\n<li>가능 공간의 partition중 가장 큰 곳 선택</li>\n<li>탐색 오래 걸림</li>\n<li>크기가 큰 partition 확보 어려움</li>\n<li>작은 크기의 partition발생 줄임</li>\n</ul>\n</li>\n<li>next fit : 순차 최초 적합\n<ul>\n<li>state table에서 마지막으로 탐색한 위치부터 탐색</li>\n<li>이전에 어디에 선택했는지 기억하고 다음 탐색은 거기서 부터 시작, 이후 first fit</li>\n<li>메모리 영역의 사용 빈도 균등화</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"배치할-자리가-없을때-전략\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%B9%98%ED%95%A0-%EC%9E%90%EB%A6%AC%EA%B0%80-%EC%97%86%EC%9D%84%EB%95%8C-%EC%A0%84%EB%9E%B5\" aria-label=\"배치할 자리가 없을때 전략 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❓배치할 자리가 없을때 전략</h3>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/c934a796-327e-43db-a332-afb74654f60a/image.png\" alt=\"\"></p>\n<h3 id=\"coalescing-holes-공간-통합\" style=\"position:relative;\"><a href=\"#coalescing-holes-%EA%B3%B5%EA%B0%84-%ED%86%B5%ED%95%A9\" aria-label=\"coalescing holes 공간 통합 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔧coalescing holes 공간 통합</h3>\n<ul>\n<li>인접한 빈 영역을 하나의 partition으로 통합</li>\n<li>Process가 memory를 release하고 나가면 수행 <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/3bbe1f90-6e41-42f3-9590-4327b0254b15/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"storage-compaction-메모리-압축\" style=\"position:relative;\"><a href=\"#storage-compaction-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%95%95%EC%B6%95\" aria-label=\"storage compaction 메모리 압축 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔧storage compaction 메모리 압축</h3>\n<ul>\n<li>모든 빈공간을 하나로 통합</li>\n<li>프로세스 처리에 필요한 적재 공간 확보가 필요할 떄 수행</li>\n<li>모든 프로세스 재배치할때, 모두 중지해야한다(overhead) <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/6b54889d-05d5-4294-b900-5d3f3b7cd60d/image.png\" alt=\"\"></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#continuous-memory-allocation\">📌continuous memory allocation</a></p>\n</li>\n<li>\n<p><a href=\"#uni-programming\">📌uni-programming</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9C%A0%EB%8B%88-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%AC%B8%EC%A0%9C%EC%A0%90\">❌유니 프로그래밍 문제점</a></p>\n</li>\n<li>\n<p><a href=\"#multi-programing\">📌multi-programing</a></p>\n<ul>\n<li><a href=\"#fixed-partition-multi-programming\">📖fixed partition multi-programming</a></li>\n<li><a href=\"#fragmentation-%EB%8B%A8%ED%8E%B8%ED%99%94-%EB%B0%9C%EC%83%9D\">❌fragmentation 단편화 발생</a></li>\n<li><a href=\"#variable-partition-multi-programming\">📖variable partition multi-programming</a></li>\n<li><a href=\"#%EB%82%A8%EC%9D%80-%EA%B3%B5%EA%B0%84%EC%9D%B4-%EC%97%AC%EB%9F%AC%EA%B5%B0%EB%8D%B0%EC%9D%B8%EB%8D%B0-%EC%96%B4%EB%94%94%EC%97%90-%EB%B0%B0%EC%B9%98%ED%95%A0%EA%B9%8C\">❓남은 공간이 여러군데인데 어디에 배치할까</a></li>\n<li><a href=\"#%EB%B0%B0%EC%B9%98-%EC%A0%84%EB%9E%B5\">🔧배치 전략</a></li>\n<li><a href=\"#%EB%B0%B0%EC%B9%98%ED%95%A0-%EC%9E%90%EB%A6%AC%EA%B0%80-%EC%97%86%EC%9D%84%EB%95%8C-%EC%A0%84%EB%9E%B5\">❓배치할 자리가 없을때 전략</a></li>\n<li><a href=\"#coalescing-holes-%EA%B3%B5%EA%B0%84-%ED%86%B5%ED%95%A9\">🔧coalescing holes 공간 통합</a></li>\n<li><a href=\"#storage-compaction-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%95%95%EC%B6%95\">🔧storage compaction 메모리 압축</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Memory 관리 2","date":"2023년 02월 22일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/운영체제/2023-02-23-Memory-관리-2/","previous":{"fields":{"slug":"/lecture/운영체제/2023-02-21-DeadLock-3/"},"frontmatter":{"categories":["운영체제"],"title":"DeadLock 3","date":"2023-02-21 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/운영체제/2023-02-23-Memory-관리-1/"},"frontmatter":{"categories":["운영체제"],"title":"Memory 관리 1","date":"2023-02-23 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}