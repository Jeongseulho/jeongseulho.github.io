{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/운영체제/2023-03-08-File-System-Implement/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"allocation-methods\" style=\"position:relative;\"><a href=\"#allocation-methods\" aria-label=\"allocation methods permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Allocation Methods</h2>\n<h3 id=\"continuous-allocation\" style=\"position:relative;\"><a href=\"#continuous-allocation\" aria-label=\"continuous allocation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Continuous allocation</h3>\n<ul>\n<li>한 File을 디스크의 연속된 block에 저장</li>\n<li>효율적인 file 접근 (순차, 직접 접근)</li>\n<li>새로운 file을 위한 공간 확보가 어려움</li>\n<li>External fragmentation</li>\n<li>파일이 용량이 커지도록 변경된 경우를 고려해야해서 차지할 공간 크기 결정이 어려움\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/c8d5018d-4671-48f0-9177-5b88bf78dda9/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"discontinuous-allocation\" style=\"position:relative;\"><a href=\"#discontinuous-allocation\" aria-label=\"discontinuous allocation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Discontinuous allocation</h3>\n<h3 id=\"️linked-allocation\" style=\"position:relative;\"><a href=\"#%EF%B8%8Flinked-allocation\" aria-label=\"️linked allocation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️Linked allocation</h3>\n<ul>\n<li>File이 저장된 block들을 linked list로 연결</li>\n<li>Directory는 각 file에 대한 첫 번째 block에 대한 포인터를 가짐</li>\n<li>Simple, No external fragmentation</li>\n<li>직접 접근에 비효율적</li>\n<li>포인터 저장을 위한 공간 필요</li>\n</ul>\n<h4 id=\"️file-allocation-table-fat\" style=\"position:relative;\"><a href=\"#%EF%B8%8Ffile-allocation-table-fat\" aria-label=\"️file allocation table fat permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️File Allocation Table (FAT)</h4>\n<ul>\n<li>linked allocation 실제 사용 법</li>\n<li>각 block의 시작 부분에 다음 블록의 번호를 기록하는 방법\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/712461e9-5471-416e-9b69-a7f4b3216f35/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"️indexed-allocation\" style=\"position:relative;\"><a href=\"#%EF%B8%8Findexed-allocation\" aria-label=\"️indexed allocation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️Indexed Allocation</h3>\n<ul>\n<li>File이 저장된 block의 정보(pointer)를 Index block에 모아 둠</li>\n<li>직접 접근에 효율적, 순차 접근에는 비효율적</li>\n<li>File 당 Index block을 유지</li>\n<li>Index block 크기에 따라 파일의 최대 크기가 제한 됨\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/1517596e-bce8-4ff5-b836-d18ac030f68e/image.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"free-space-management빈-공간-관리\" style=\"position:relative;\"><a href=\"#free-space-management%EB%B9%88-%EA%B3%B5%EA%B0%84-%EA%B4%80%EB%A6%AC\" aria-label=\"free space management빈 공간 관리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Free Space Management(빈 공간 관리)</h2>\n<h3 id=\"bit-vector\" style=\"position:relative;\"><a href=\"#bit-vector\" aria-label=\"bit vector permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Bit vector</h3>\n<ul>\n<li>시스템 내 모든 block들에 대한 사용 여부를\r\n1 bit flag로 표시</li>\n<li>Bit vector 전체를 메모리에 보관 해야 함, 대형 시스템에서 부적합\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/0ebb4738-899b-440a-885e-a6935ef328ef/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"linked-list\" style=\"position:relative;\"><a href=\"#linked-list\" aria-label=\"linked list permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Linked list</h3>\n<ul>\n<li>빈 block을 linked list로 연결\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/d90cb569-3806-460a-9006-70860bde30bb/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"grouping\" style=\"position:relative;\"><a href=\"#grouping\" aria-label=\"grouping permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Grouping</h3>\n<ul>\n<li>n개의 빈 block을 그룹으로 묶고, 그룹 단위로\r\nlinked list로 연결</li>\n<li>연속된 빈 block을 쉽게 찾을 수 있음\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/d6ee031c-2b2e-43d0-a1f4-443e0527825e/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"counting\" style=\"position:relative;\"><a href=\"#counting\" aria-label=\"counting permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Counting</h3>\n<ul>\n<li>연속된 빈 block들 중 첫 번째 block의 주소와\r\n연속된 block의 수를 table로 유지</li>\n<li>Continuous allocation 시스템에 유리한 기법</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#allocation-methods\">📌Allocation Methods</a></p>\n<ul>\n<li>\n<p><a href=\"#continuous-allocation\">📖Continuous allocation</a></p>\n</li>\n<li>\n<p><a href=\"#discontinuous-allocation\">📖Discontinuous allocation</a></p>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8Flinked-allocation\">✏️Linked allocation</a></p>\n<ul>\n<li><a href=\"#%EF%B8%8Ffile-allocation-table-fat\">✏️File Allocation Table (FAT)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8Findexed-allocation\">✏️Indexed Allocation</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#free-space-management%EB%B9%88-%EA%B3%B5%EA%B0%84-%EA%B4%80%EB%A6%AC\">📌Free Space Management(빈 공간 관리)</a></p>\n<ul>\n<li><a href=\"#bit-vector\">📖Bit vector</a></li>\n<li><a href=\"#linked-list\">📖Linked list</a></li>\n<li><a href=\"#grouping\">📖Grouping</a></li>\n<li><a href=\"#counting\">📖Counting</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"File System Implement","date":"2023년 03월 07일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/운영체제/2023-03-08-File-System-Implement/","previous":{"fields":{"slug":"/lecture/운영체제/2023-03-08-IO-System/"},"frontmatter":{"categories":["운영체제"],"title":"IO System","date":"2023-03-08 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/운영체제/2023-03-09-RAID-Architecture/"},"frontmatter":{"categories":["운영체제"],"title":"RAID Architecture","date":"2023-03-09 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}