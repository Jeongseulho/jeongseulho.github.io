{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/운영체제/2023-02-20-DeadLock-2/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"deadlock의-그래프-모델\" style=\"position:relative;\"><a href=\"#deadlock%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%AA%A8%EB%8D%B8\" aria-label=\"deadlock의 그래프 모델 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Deadlock의 그래프 모델</h2>\n<ul>\n<li><code class=\"language-text\">프로세스 -> 자원</code>은 해당 프로세스가 자원을 요청</li>\n<li><code class=\"language-text\">자원 -> 프로세스</code>는 자원이 프로세스에게 할당 됨 <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/003b1039-27f9-4de9-a375-725c9740f2b8/image.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"deadlock의-state-transition-모델\" style=\"position:relative;\"><a href=\"#deadlock%EC%9D%98-state-transition-%EB%AA%A8%EB%8D%B8\" aria-label=\"deadlock의 state transition 모델 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Deadlock의 state transition 모델</h2>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/c1e0400c-bd3b-43c3-875c-45660d07ee2f/image.png\" alt=\"\"> 프로세스가 2개인 예 <img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/a5671cb1-1d3e-4859-8e4a-01a373a6928a/image.png\" alt=\"\"></p>\n<ul>\n<li>edge는 해당 번호의 프로세스가 개입</li>\n<li>노드의 숫자 2개는 각각 현재 프로세스의 상태</li>\n<li>P1이 R1보유 R2를 요청 + P2가 R2보유 R1을 요청시 데드락</li>\n</ul>\n<h2 id=\"deadlock의-발생-필요조건\" style=\"position:relative;\"><a href=\"#deadlock%EC%9D%98-%EB%B0%9C%EC%83%9D-%ED%95%84%EC%9A%94%EC%A1%B0%EA%B1%B4\" aria-label=\"deadlock의 발생 필요조건 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌deadlock의 발생 필요조건</h2>\n<ul>\n<li>자원의 특성\n<ul>\n<li>Exclusive use of resources : 자원을 독점적으로 사용해야함</li>\n<li>Non-preemptive resource : 자원을 빼앗을 수 없음</li>\n</ul>\n</li>\n<li>프로세스의 특성\n<ul>\n<li>hold and wait(partial allocation) : 자원을 보유하고 있으면서 다른 자원을 기다림</li>\n<li>circular wait : 자원을 요청하는 순서가 순환적임</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"deadlock의-해결-방법\" style=\"position:relative;\"><a href=\"#deadlock%EC%9D%98-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"deadlock의 해결 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌deadlock의 해결 방법</h2>\n<h2 id=\"deadlock-prevention-methods\" style=\"position:relative;\"><a href=\"#deadlock-prevention-methods\" aria-label=\"deadlock prevention methods permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>deadlock prevention methods</h2>\n<ul>\n<li>4가지의 조건 중 하나를 제거</li>\n</ul>\n<ol>\n<li>모든 자원을 공유 가능하게 만듬\n<ul>\n<li>exclusive use of resources를 제거</li>\n<li>사실상 불가능</li>\n</ul>\n</li>\n<li>모든 자원에 대해 선점 가능하게 만듬\n<ul>\n<li>non-preemptive resource를 제거</li>\n<li>사실상 불가능</li>\n<li>유사 방법 : 프로세스A가 자원A를 사용중에 프로세스B가 자원A를 요청하면 프로세스A가 하던 작업을 취소하고 자원을 반납(매우 비효율적)</li>\n</ul>\n</li>\n<li>필요한 자원 한번에 모두 할당\n<ul>\n<li>hold and wait를 제거</li>\n<li>자원 낭비가 심함(필요하지 않은 순간에도 자원을 보유)</li>\n<li>다른 프로세스들의 대기 시간이 길어짐</li>\n</ul>\n</li>\n<li>자원들에 순서를 부여\n<ul>\n<li>circular wait를 제거</li>\n<li>자원의 순서를 정해놓고 순서의 증가 방향으로만 자원을 요청(1자로 만듬)</li>\n<li>자원 낭비 발생(사용 가능한 자원이 있어도 사용하지 못함)</li>\n</ul>\n</li>\n</ol>","tableOfContents":"<ul>\n<li><a href=\"#deadlock%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%AA%A8%EB%8D%B8\">📌Deadlock의 그래프 모델</a></li>\n<li><a href=\"#deadlock%EC%9D%98-state-transition-%EB%AA%A8%EB%8D%B8\">📌Deadlock의 state transition 모델</a></li>\n<li><a href=\"#deadlock%EC%9D%98-%EB%B0%9C%EC%83%9D-%ED%95%84%EC%9A%94%EC%A1%B0%EA%B1%B4\">📌deadlock의 발생 필요조건</a></li>\n<li><a href=\"#deadlock%EC%9D%98-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">📌deadlock의 해결 방법</a></li>\n<li><a href=\"#deadlock-prevention-methods\">deadlock prevention methods</a></li>\n</ul>","frontmatter":{"title":"DeadLock 2","date":"2023년 02월 19일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/운영체제/2023-02-20-DeadLock-2/","previous":{"fields":{"slug":"/lecture/운영체제/2023-02-16-Process-동기화와-상호배제-4/"},"frontmatter":{"categories":["운영체제"],"title":"Process 동기화와 상호배제 4","date":"2023-02-16 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/운영체제/2023-02-20-DeadLock-1/"},"frontmatter":{"categories":["운영체제"],"title":"DeadLock 1","date":"2023-02-20 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}