{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/운영체제/2023-02-16-Process-동기화와-상호배제-4/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"eventcountsequenceros-solution\" style=\"position:relative;\"><a href=\"#eventcountsequenceros-solution\" aria-label=\"eventcountsequenceros solution permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Eventcount/Sequencer(OS solution)</h2>\n<ul>\n<li>Sequencer\n<ul>\n<li>정수형 변수</li>\n<li>생성시 0으로 초기화, 감소하지 않음</li>\n<li>발생 사건들의 순서 유지</li>\n<li>은행의 번호표라 생각</li>\n<li>ticket() 연산으로만 접근 가능</li>\n</ul>\n</li>\n<li>ticket()\n<ul>\n<li>은행에서 실제 번호표 뽑는 함수라 생각</li>\n<li>Sequencer를 반환 즉, ticket()이 호출 된 횟수를 반환하는 것</li>\n</ul>\n</li>\n<li>Eventcount\n<ul>\n<li>정수형 변수</li>\n<li>생성시 0으로 초기화, 감소하지 않음</li>\n<li>발생 사건의 횟수 기록</li>\n<li>은행의 번호를 알려주는 알림판의 번호</li>\n<li>read(E), advanced(E), await(E,v) 연산으로 접근 가능</li>\n</ul>\n</li>\n<li>read(E)\n<ul>\n<li>현재 Eventcount 반환 즉, 은행의 번호 알림판의 번호 읽기</li>\n</ul>\n</li>\n<li>advance(E)\n<ul>\n<li>E = E + 1 연산 이후</li>\n<li>E를 기다리고 있는 프로세스 wake up 즉, 번호 + 1 이후 알림 울리기</li>\n</ul>\n</li>\n<li>await(E,v)\n<ul>\n<li>V는 정수형 변수(내 번호)</li>\n<li>if (E &#x3C; v)이면 E에 해당하는 프로세스에 전달, 본인은 대기</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"me구현\" style=\"position:relative;\"><a href=\"#me%EA%B5%AC%ED%98%84\" aria-label=\"me구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖ME구현</h3>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/d964face-6ece-42c7-8a07-2fba3ed13f8d/image.png\" alt=\"\"></p>\n<h3 id=\"producer-consumer-문제-해결\" style=\"position:relative;\"><a href=\"#producer-consumer-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\" aria-label=\"producer consumer 문제 해결 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖producer-consumer 문제 해결</h3>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/103e13d7-a6f4-4430-8c19-238911d3c3db/image.png\" alt=\"\"></p>\n<h2 id=\"️eventcountsequencer의-특징\" style=\"position:relative;\"><a href=\"#%EF%B8%8Feventcountsequencer%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"️eventcountsequencer의 특징 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❗️Eventcount/Sequencer의 특징</h2>\n<ul>\n<li>no busy waiting</li>\n<li>no starvation(FIFO scheduling for $$Q_{e}$$)</li>\n<li>Semaphore 보다 더 low-level control이 가능</li>\n</ul>\n<h2 id=\"monitorlanguage-level-solution\" style=\"position:relative;\"><a href=\"#monitorlanguage-level-solution\" aria-label=\"monitorlanguage level solution permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Monitor(Language-Level solution)</h2>\n<ul>\n<li>entry queue : 진입 큐\n<ul>\n<li>모니터 내의 procedure 수만큼 존재</li>\n</ul>\n</li>\n<li>mutual exclusion : 모니터내에 항상 하나의 프로세스만 진입 가능(language가 보장)</li>\n<li>information hiding : 공유 데이터는 모니터내의 프로세스만 접근 가능</li>\n<li>condition queue : 모니터 내 특정 이벤트를 기다리는 프로세스의 대기실</li>\n<li>signaler queue : 신호제공자 큐 - 모니터에 항상 1개의 신호제공자 큐가 존재 - signal() 명령을 실행한 프로세스의 임시대기실\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/3828bcaa-4366-41b9-a1be-8346c2aef89d/image.png\" alt=\"\"></li>\n</ul>\n<ol>\n<li>자원 빌리려는 프로세스A가 entry queue for request에 간다</li>\n<li>프로세스A가 모니터내의 requestR에 진입</li>\n<li>확인 했더니 모니터 내부에 빌릴 자원이 없어서 condition queue로 가서 기다린다</li>\n<li>자원을 다쓴 프로세스B가 entry queue for release로 간다</li>\n<li>프로세스 B가 모니터 내의 releaseR에 진입</li>\n<li>condition queue에 대기하는 프로세스A가 존재하므로 프로세스B는 signaler queue로 이동한다</li>\n<li>signaler queue에서 condition queue에 대기하고 있는 프로세스A를 wake up 한다</li>\n</ol>\n<h3 id=\"producer-consumer-문제-해결-1\" style=\"position:relative;\"><a href=\"#producer-consumer-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-1\" aria-label=\"producer consumer 문제 해결 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖producer-consumer 문제 해결</h3>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/676a5e87-75bd-449a-adb7-9f8b6b04f582/image.png\" alt=\"\"></p>\n<h3 id=\"reader-writer-문제\" style=\"position:relative;\"><a href=\"#reader-writer-%EB%AC%B8%EC%A0%9C\" aria-label=\"reader writer 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖reader-writer 문제</h3>\n<h3 id=\"dining-philosopher-문제\" style=\"position:relative;\"><a href=\"#dining-philosopher-%EB%AC%B8%EC%A0%9C\" aria-label=\"dining philosopher 문제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖dining philosopher 문제</h3>\n<ul>\n<li>철학자들은 생각 - 먹기를 반복</li>\n<li>공유자원 : 스파게티, 포크</li>\n<li>스파게티를 먹기 위해서는 좌우 포크 2개를 손에 들어아햠\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/b20ec590-7395-453b-b9f1-e381fd11fd50/image.png\" alt=\"\"></li>\n<li>해결 방법\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/276efd0c-cbb0-4d0a-ad39-f8efd4a33b5a/image.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"️monitor-특징\" style=\"position:relative;\"><a href=\"#%EF%B8%8Fmonitor-%ED%8A%B9%EC%A7%95\" aria-label=\"️monitor 특징 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❗️Monitor 특징</h2>\n<ul>\n<li>사용이 쉽다</li>\n<li>에러 가능성 낮다</li>\n<li>지원하는 언어에서만 사용 가능</li>\n<li>컴파일러가 OS를 이해해야함</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#eventcountsequenceros-solution\">📌Eventcount/Sequencer(OS solution)</a></p>\n<ul>\n<li><a href=\"#me%EA%B5%AC%ED%98%84\">📖ME구현</a></li>\n<li><a href=\"#producer-consumer-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\">📖producer-consumer 문제 해결</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8Feventcountsequencer%EC%9D%98-%ED%8A%B9%EC%A7%95\">❗️Eventcount/Sequencer의 특징</a></p>\n</li>\n<li>\n<p><a href=\"#monitorlanguage-level-solution\">📌Monitor(Language-Level solution)</a></p>\n<ul>\n<li><a href=\"#producer-consumer-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-1\">📖producer-consumer 문제 해결</a></li>\n<li><a href=\"#reader-writer-%EB%AC%B8%EC%A0%9C\">📖reader-writer 문제</a></li>\n<li><a href=\"#dining-philosopher-%EB%AC%B8%EC%A0%9C\">📖dining philosopher 문제</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8Fmonitor-%ED%8A%B9%EC%A7%95\">❗️Monitor 특징</a></p>\n</li>\n</ul>","frontmatter":{"title":"Process 동기화와 상호배제 4","date":"2023년 02월 15일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/운영체제/2023-02-16-Process-동기화와-상호배제-4/","previous":{"fields":{"slug":"/lecture/운영체제/2023-02-15-Process-동기화와-상호배제-3/"},"frontmatter":{"categories":["운영체제"],"title":"Process 동기화와 상호배제 3","date":"2023-02-15 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/운영체제/2023-02-20-DeadLock-2/"},"frontmatter":{"categories":["운영체제"],"title":"DeadLock 2","date":"2023-02-20 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}