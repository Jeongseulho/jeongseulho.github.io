{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/네트워크/2023-03-24-TCP-프로토콜/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"tcp\" style=\"position:relative;\"><a href=\"#tcp\" aria-label=\"tcp permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌TCP</h2>\n<ul>\n<li>연결 지향형 프로토콜</li>\n<li>안정적, 순차적, 에러없는 교환 지향</li>\n<li>UDP보다 안전하고 속도는 UDP보단 느리다</li>\n</ul>\n<h2 id=\"tcp-프로토콜-형태\" style=\"position:relative;\"><a href=\"#tcp-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-%ED%98%95%ED%83%9C\" aria-label=\"tcp 프로토콜 형태 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌TCP 프로토콜 형태</h2>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/564e7e14-2433-4d22-bd69-7cb2baa8b979/image.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>TCP 세그먼트 : TCP 프로토콜에서 사용하는 데이터 단위</p>\n</li>\n<li>\n<p>sequence number과 acknowledgment number</p>\n<ol>\n<li>패킷A를 전송</li>\n<li>“패킷 받았어! 다음 패킷 보내줘!”라는 내용을 패킷B를 통해 응답</li>\n<li>“내가 보낸 패킷을 상대방이 진짜 받았구나?” 확인 후 다음 패킷전송\n<ul>\n<li>이때 지금 잘 받았다는 패킷B가 나의 어떤 요청 패킷A에 대한 대답이 맞나?, 이것을 해결하기 위한 sequence number과 acknowledgment number</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>sequence number : 전송할 TCP 세그먼트의 연속된 데이터 번호중 시작 번호(xx번호 부터 줄게)</p>\n</li>\n<li>\n<p>acknowledgment number : 수신받아야할 TCP 세그먼트의 연속된 데이터 번호중 시작 번호(XX번호 부터 줘)</p>\n</li>\n<li>\n<p>TCP Flags : 각 연결 상태를 알려주는 플래그</p>\n<ul>\n<li>U : 긴급 비트, 지금 보내는 데이터가 우선순위 높은거야</li>\n<li>A : 승인 비트, 연결 가능한지, 데이터 보내도 되는지에대한 응답하는 비트</li>\n<li>P : 푸쉬 비트, 원래 TCP 버퍼가 쌓여야 전송하는데 안쌓여도 그냥 밀어넣어 보내겠다</li>\n<li>R : 초기화 비트, 연결 상태 새로고침하자</li>\n<li>S : 싱크(동기화) 비트, 연결을 시작할때 사용하여 두 노드가 동기화</li>\n<li>F : 종료 비트, 연결 끊자</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"tcp-연결-수립-과정\" style=\"position:relative;\"><a href=\"#tcp-%EC%97%B0%EA%B2%B0-%EC%88%98%EB%A6%BD-%EA%B3%BC%EC%A0%95\" aria-label=\"tcp 연결 수립 과정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌TCP 연결 수립 과정</h2>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/679b7b09-dc01-4f50-a69e-f0bd1fdfec93/image.png\" alt=\"\"></p>\n<ul>\n<li>TCP 데이터 통신에서 프로세스-프로세스 연결을 위해 가장 먼저 수행되는 과정</li>\n<li>아래 과정을 3Way HandShake라고 한다</li>\n</ul>\n<ol>\n<li>클라이언트에서 서버로 요청 패킷 전송</li>\n<li>서버가 클라이언트 요청을 수락하는 패킷을 전송</li>\n<li>클라이언트는 이를 최종적으로 수락하는 패킷을 전송</li>\n</ol>\n<h2 id=\"tcp-연결성공-이후-데이터-통신\" style=\"position:relative;\"><a href=\"#tcp-%EC%97%B0%EA%B2%B0%EC%84%B1%EA%B3%B5-%EC%9D%B4%ED%9B%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%86%B5%EC%8B%A0\" aria-label=\"tcp 연결성공 이후 데이터 통신 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌TCP 연결성공 이후 데이터 통신</h2>\n<ul>\n<li>페이로드를 포함한 패킷 주고받을 때 규칙</li>\n</ul>\n<ol>\n<li>보낸쪽에서 또 보낼때, SEQ, ACK 번호가 그대로\r\n<code class=\"language-text\">(연결 수립이후 통신하면 클라이언트가 다시 또 먼저 시작, 2번 연속 요청보내게 됨)</code></li>\n<li>받는 쪽에서 받은 ACK = 다음에 보낼 SEQ\r\n<code class=\"language-text\">(xx번호 부터줘 -> xx번호 부터 줄게)</code></li>\n<li>받는 쪽에서 받은 SEQ + 데이터 크기 = 다음에 보낼 ACK\r\n<code class=\"language-text\">(xx번호 부터 줄게 데이터 크기는 100이야 -> 그럼 다음엔 xx + 100번 부터 줘)</code>\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/c5e58aff-dd7f-45cf-8db0-4d6f3b819fab/image.png\" alt=\"\"></li>\n</ol>\n<ul>\n<li>위 연결 수립이후 이어짐</li>\n<li>각 줄에서 데이터 크기는 100, 500, 0(연결 끊기 과정 데이터 통신x)</li>\n</ul>\n<h2 id=\"tcp의-상태-전이도\" style=\"position:relative;\"><a href=\"#tcp%EC%9D%98-%EC%83%81%ED%83%9C-%EC%A0%84%EC%9D%B4%EB%8F%84\" aria-label=\"tcp의 상태 전이도 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌TCP의 상태 전이도</h2>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/5d4e6f44-a3c3-4fe4-b361-90c469559b24/image.png\" alt=\"\"></p>\n<ul>\n<li>Listen 상태 : 서버가 클라이언트의 연결해도 돼? 라는 질문에 언제든지 대답할 수 있는 대기 상태</li>\n<li>ESTABLISHED 상태 : 연결이 수립된 상태</li>\n<li>listen상태에서 연결이 수립되면 ESTABLISHED 상태가 되는 것</li>\n</ul>\n<h2 id=\"연결-수립-과정에서-상태-전이\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EA%B2%B0-%EC%88%98%EB%A6%BD-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EC%83%81%ED%83%9C-%EC%A0%84%EC%9D%B4\" aria-label=\"연결 수립 과정에서 상태 전이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연결 수립 과정에서 상태 전이</h2>\n<p><img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/26cfc490-3e7d-4cd8-ae54-7ffd85c5617f/image.png\" alt=\"\"></p>\n<ul>\n<li>서버는 Listen 상태로 대기중이어야함</li>\n<li>처음 클라이언트가 연결하자 요청 SYN_SENT 상태로</li>\n<li>요청 받으면 SYN_RECEIVED 상태로</li>\n<li>클라이언트가 다시 요청 보내면서 ESTABLISHED 상태로</li>\n<li>받은 서버도 ESTABLISHED 상태로</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#tcp\">📌TCP</a></li>\n<li><a href=\"#tcp-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-%ED%98%95%ED%83%9C\">📌TCP 프로토콜 형태</a></li>\n<li><a href=\"#tcp-%EC%97%B0%EA%B2%B0-%EC%88%98%EB%A6%BD-%EA%B3%BC%EC%A0%95\">📌TCP 연결 수립 과정</a></li>\n<li><a href=\"#tcp-%EC%97%B0%EA%B2%B0%EC%84%B1%EA%B3%B5-%EC%9D%B4%ED%9B%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%86%B5%EC%8B%A0\">📌TCP 연결성공 이후 데이터 통신</a></li>\n<li><a href=\"#tcp%EC%9D%98-%EC%83%81%ED%83%9C-%EC%A0%84%EC%9D%B4%EB%8F%84\">📌TCP의 상태 전이도</a></li>\n<li><a href=\"#%EC%97%B0%EA%B2%B0-%EC%88%98%EB%A6%BD-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EC%83%81%ED%83%9C-%EC%A0%84%EC%9D%B4\">연결 수립 과정에서 상태 전이</a></li>\n</ul>","frontmatter":{"title":"TCP 프로토콜","date":"2023년 03월 23일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/네트워크/2023-03-24-TCP-프로토콜/","previous":{"fields":{"slug":"/lecture/네트워크/2023-03-23-4계층-프로토콜/"},"frontmatter":{"categories":["네트워크"],"title":"4계층 프로토콜","date":"2023-03-23 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/네트워크/2023-03-26-NAT와-포트-포워딩/"},"frontmatter":{"categories":["네트워크"],"title":"NAT와 포트 포워딩","date":"2023-03-26 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}