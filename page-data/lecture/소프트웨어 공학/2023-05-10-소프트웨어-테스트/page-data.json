{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/소프트웨어 공학/2023-05-10-소프트웨어-테스트/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"verification-approaches\" style=\"position:relative;\"><a href=\"#verification-approaches\" aria-label=\"verification approaches permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌verification approaches</h2>\n<h3 id=\"testing\" style=\"position:relative;\"><a href=\"#testing\" aria-label=\"testing permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Testing</h3>\n<ul>\n<li>테스트</li>\n<li>장점 : 버그를 찾으면 확실하게 버그라고 단정지을 수 있다(no false positive)</li>\n<li>단점 : 완전하지 않음, 못 찾는 경우 존재</li>\n<li>버그를 존재하는 것을 증명할 수 있지만 버그가 없다고 증명할 수 없다</li>\n</ul>\n<h3 id=\"static-verification\" style=\"position:relative;\"><a href=\"#static-verification\" aria-label=\"static verification permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Static verification</h3>\n<ul>\n<li>가능한 모든 인풋, 경우의 수를 고려하는 것</li>\n<li>장점 : 완전함(모든 경우의 수 고려)</li>\n<li>단점 : 버그를 찾게되어도 그것이 실제 고쳐할 버그인지 단정지을 수 없다(false positive 존재)</li>\n</ul>\n<h3 id=\"inspections\" style=\"position:relative;\"><a href=\"#inspections\" aria-label=\"inspections permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Inspections</h3>\n<ul>\n<li>그룹이 모여 코드를 한줄씩 모두 읽어보면서 버그를 찾는 것</li>\n<li>장점 : 철저함, 체계적</li>\n<li>단점 : 주관적</li>\n</ul>\n<h3 id=\"formal-proofs-of-correctness\" style=\"position:relative;\"><a href=\"#formal-proofs-of-correctness\" aria-label=\"formal proofs of correctness permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Formal proofs of correctness</h3>\n<ul>\n<li>수학적으로 프로그램의 동작을 증명하는 것</li>\n<li>장점 : 강한 보장성</li>\n<li>단점 : 비용이 많이 들고 전문성이 필요</li>\n</ul>\n<h2 id=\"일반적-테스트-방법\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98%EC%A0%81-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%A9%EB%B2%95\" aria-label=\"일반적 테스트 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌일반적 테스트 방법</h2>\n<ul>\n<li>test input을 넣어서 출력되는 output이 기대하는 output과 같은지 확인\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/ef9fc219-7676-4b0f-b440-8bbe5c3749d4/image.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"test-enviroment\" style=\"position:relative;\"><a href=\"#test-enviroment\" aria-label=\"test enviroment permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Test Enviroment</h2>\n<ul>\n<li>Driver : 테스트를 실행하는 프로그램</li>\n<li>Stub : 함수A를 테스트하고 싶은데, 해당 함수안에 다른 함수 B가 존재한다면, B의 역할을 하는 임의의 보조 함수를 지칭(B가 아직 구현안됬거나, 테스트를 아직 통과하지 못했을 때)\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/ca0f0f7d-f33d-4a4b-bd34-27fc15b6f019/image.png\" alt=\"\"></li>\n</ul>\n<h2 id=\"test-case-design\" style=\"position:relative;\"><a href=\"#test-case-design\" aria-label=\"test case design permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Test Case design</h2>\n<h3 id=\"test-case-design-고려해야-할-것\" style=\"position:relative;\"><a href=\"#test-case-design-%EA%B3%A0%EB%A0%A4%ED%95%B4%EC%95%BC-%ED%95%A0-%EA%B2%83\" aria-label=\"test case design 고려해야 할 것 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖Test Case design 고려해야 할 것</h3>\n<ul>\n<li>결함을 발견하는 것을 목적으로 한다</li>\n<li>어떤 측면에있어서 빠짐없이 디자인 해야 한다</li>\n<li>비용과 시간을 최소화 해야한다</li>\n<li>정상적인 input뿐만 아닌 비정상적인 input에대한 테스트도 해야한다(프로그램이 그냥 DOWN되는게 아닌, 비정상적인 input입니다 오류 메세지 출력 등이 필요)</li>\n<li>버그가 발견된 부분은 다른 input에대한 버그도 존재할 확률이 더 높다</li>\n</ul>\n<h2 id=\"test-vs-debugging\" style=\"position:relative;\"><a href=\"#test-vs-debugging\" aria-label=\"test vs debugging permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Test vs Debugging</h2>\n<ul>\n<li>Test : 결함을 찾는 과정</li>\n<li>Debugging : 찾은 결함의 위치를 찾고 고쳐가는 과정</li>\n</ul>\n<h2 id=\"test-approaches\" style=\"position:relative;\"><a href=\"#test-approaches\" aria-label=\"test approaches permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Test Approaches</h2>\n<ul>\n<li>테스트의 주체(개발자, 고객) 또는 테스트 범위 등에 따라 나뉨\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/79c0d9c1-3e0e-4b62-905a-1e99d90fd2e8/image.png\" alt=\"\"></li>\n<li>인수 테스트 : 고객이 하는 시스템 테스트</li>\n<li>회귀 테스트 : V1에서 V2로 업그레이드시 V1를 통과한 케이스가 V2에서도 통과하는지 확인\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/db153a52-8470-4046-8541-4d5dd608be41/image.png\" alt=\"\"></li>\n<li>alpha test : 개발자들 또는 회사 내부에서의 테스트(너그러움)</li>\n<li>beta test : 개발자들 외부에서의 테스트(엄격함)\r\n<img src=\"https://velog.velcdn.com/images/wjdtmfgh/post/ef38f954-dc04-43b5-99ad-ef5d890b1ba9/image.png\" alt=\"\"></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#verification-approaches\">📌verification approaches</a></p>\n<ul>\n<li><a href=\"#testing\">📖Testing</a></li>\n<li><a href=\"#static-verification\">📖Static verification</a></li>\n<li><a href=\"#inspections\">📖Inspections</a></li>\n<li><a href=\"#formal-proofs-of-correctness\">📖Formal proofs of correctness</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9D%BC%EB%B0%98%EC%A0%81-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B0%A9%EB%B2%95\">📌일반적 테스트 방법</a></p>\n</li>\n<li>\n<p><a href=\"#test-enviroment\">📌Test Enviroment</a></p>\n</li>\n<li>\n<p><a href=\"#test-case-design\">📌Test Case design</a></p>\n<ul>\n<li><a href=\"#test-case-design-%EA%B3%A0%EB%A0%A4%ED%95%B4%EC%95%BC-%ED%95%A0-%EA%B2%83\">📖Test Case design 고려해야 할 것</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#test-vs-debugging\">📌Test vs Debugging</a></p>\n</li>\n<li>\n<p><a href=\"#test-approaches\">📌Test Approaches</a></p>\n</li>\n</ul>","frontmatter":{"title":"소프트웨어 테스트","date":"2023년 05월 09일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/소프트웨어 공학/2023-05-10-소프트웨어-테스트/","previous":{"fields":{"slug":"/lecture/소프트웨어 공학/2023-05-09-UML-다이어그램-코드로/"},"frontmatter":{"categories":["소프트웨어 공학"],"title":"UML 다이어그램 코드로","date":"2023-05-09 01:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/소프트웨어 공학/2023-05-10-블랙,화이트-박스-테스팅/"},"frontmatter":{"categories":["소프트웨어 공학"],"title":"블랙, 화이트 박스 테스팅","date":"2023-05-10 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}