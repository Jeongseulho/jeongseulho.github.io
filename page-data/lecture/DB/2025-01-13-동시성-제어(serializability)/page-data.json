{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/DB/2025-01-13-동시성-제어(serializability)/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h1>\n<p>여러 트랜잭션을 빠르게 처리하면서도 올바르게 처리하도록 하자(lost update 방지)</p>\n<ul>\n<li><code class=\"language-text\">K</code>의 계좌에서 <code class=\"language-text\">H</code>의 계좌로 돈을 송금하는 트랜잭션 1개</li>\n<li><code class=\"language-text\">H</code>의 계좌에서 돈을 출금하는 트랜잭션 1개</li>\n</ul>\n<p>2개의 트랜잭션을 예시로 설명</p>\n<h2 id=\"트랙잭션-상세-분석\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%99%EC%9E%AD%EC%85%98-%EC%83%81%EC%84%B8-%EB%B6%84%EC%84%9D\" aria-label=\"트랙잭션 상세 분석 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랙잭션 상세 분석</h2>\n<p>두 트랜잭션은 다음과 같이 68의 <code class=\"language-text\">operation</code>으로 구성되고 이를 다음과 같이 축약\r\n<img src=\"https://github.com/user-attachments/assets/1f57e78f-8249-4bc8-b826-457c4409b11e\" alt=\"Image\"></p>\n<blockquote>\n<p>r1(k) : 트랜잭션1의 <code class=\"language-text\">K</code>의 계좌 잔액 읽기<br>\nw1(k) : 트랜잭션1의 <code class=\"language-text\">K</code>의 계좌에 100원 출금<br>\nr1(h) : 트랜잭션1의 <code class=\"language-text\">H</code>의 계좌 잔액 읽기<br>\nw1(h) : 트랜잭션1의 <code class=\"language-text\">H</code>의 계좌에 100원 입금<br>\nc1 : 트랜잭션1 커밋\r\nr2(h) : 트랜잭션2의 <code class=\"language-text\">H</code>의 계좌 잔액 읽기<br>\nw2(h) : 트랜잭션2의 <code class=\"language-text\">H</code>의 계좌에 100원 출금<br>\nc2 : 트랜잭션2 커밋</p>\n</blockquote>\n<h1 id=\"serial-schedule\" style=\"position:relative;\"><a href=\"#serial-schedule\" aria-label=\"serial schedule permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>serial schedule</h1>\n<ul>\n<li>두 트랜잭션이 겹치지 않도록 실행하는 상황</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/aedd784b-abc7-4266-8e19-a82ae4ccaa73\" alt=\"Image\"></p>\n<ul>\n<li>단점 : 한 트랜잭션에서 읽고 쓰는 <code class=\"language-text\">I/O</code> 작업에서 CPU가 아무것도 안하고 다음 작업을 기다림 => 느린 처리</li>\n<li>장점 : 항상 올바른 결과 보장</li>\n</ul>\n<h1 id=\"non-serial-schedule\" style=\"position:relative;\"><a href=\"#non-serial-schedule\" aria-label=\"non serial schedule permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>non-serial schedule</h1>\n<ul>\n<li>두 트랜잭션이 겹치도록 실행하는 상황</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/05bec1aa-fd08-4fa8-9f4d-7b167c66cb5f\" alt=\"Image\"></p>\n<ul>\n<li>장점 : 트랜잭션 1의 읽고 쓰는 <code class=\"language-text\">I/O</code> 작업에서 CPU는 트랜잭션 2의 연산을 진행 => 빠른 처리</li>\n<li>단점 : 올바른 결과를 보장하지 않음</li>\n</ul>\n<h1 id=\"conflict-of-operations\" style=\"position:relative;\"><a href=\"#conflict-of-operations\" aria-label=\"conflict of operations permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>conflict of operations</h1>\n<ul>\n<li>다음 3가지 조건을 만족하면 <code class=\"language-text\">conflict of (two) operations</code>라고 함</li>\n</ul>\n<ol>\n<li>두 <code class=\"language-text\">operation</code>이 다른 트랜잭션 소속</li>\n<li>두 <code class=\"language-text\">operation</code>이 같은 데이터에 접근</li>\n<li>두 <code class=\"language-text\">operation</code> 중 최소 하나는 <code class=\"language-text\">write</code></li>\n</ol>\n<p><img src=\"https://github.com/user-attachments/assets/3c31ea5b-1b18-4295-828c-03b2d0de9b29\" alt=\"Image\"></p>\n<p><code class=\"language-text\">conflict of operations</code>는 순서가 바뀌면 결과도 바뀐다</p>\n<blockquote>\n<p>즉, 빠른 처리를 위해 non-serial schedule를 사용하면서도\r\n올바른 결과를 보장하기 위해서는 serial schedule과의 같은 <code class=\"language-text\">conflict of operations</code>를 가져야 함</p>\n</blockquote>\n<h1 id=\"conflict-equivalent\" style=\"position:relative;\"><a href=\"#conflict-equivalent\" aria-label=\"conflict equivalent permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>conflict equivalent</h1>\n<ul>\n<li>다음 2가지 조건을 만족하면 <code class=\"language-text\">conflict equivalent</code>라고 함</li>\n</ul>\n<ol>\n<li>두 스케줄이 같은 트랜잭션을 포함</li>\n<li>어떤 <code class=\"language-text\">conflict of operations</code>의 순서도 양쪽 스케줄에서 동일하다</li>\n</ol>\n<p><img src=\"https://github.com/user-attachments/assets/6af0cbcb-8f58-45fe-a079-72823d70de99\" alt=\"Image\"></p>\n<h1 id=\"conflict-serializable\" style=\"position:relative;\"><a href=\"#conflict-serializable\" aria-label=\"conflict serializable permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>conflict serializable</h1>\n<ul>\n<li>어떤 스케줄이 <code class=\"language-text\">serial schedule</code>과 <code class=\"language-text\">conflict equivalent</code>이면 <code class=\"language-text\">conflict serializable</code>이라고 함</li>\n</ul>\n<blockquote>\n<p>즉, 스케줄이 <code class=\"language-text\">serial schedule</code>과 같은 결과를 낸다고 보장할 수 있는 것</p>\n</blockquote>\n<h1 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h1>\n<p><code class=\"language-text\">non-serial schedule</code> 중에서 <code class=\"language-text\">conflict serializable</code>인 스케줄을 찾으면 빠르고 올바른 결과를 보장할 수 있음</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EB%AA%A9%ED%91%9C\">목표</a></p>\n<ul>\n<li><a href=\"#%ED%8A%B8%EB%9E%99%EC%9E%AD%EC%85%98-%EC%83%81%EC%84%B8-%EB%B6%84%EC%84%9D\">트랙잭션 상세 분석</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#serial-schedule\">serial schedule</a></p>\n</li>\n<li>\n<p><a href=\"#non-serial-schedule\">non-serial schedule</a></p>\n</li>\n<li>\n<p><a href=\"#conflict-of-operations\">conflict of operations</a></p>\n</li>\n<li>\n<p><a href=\"#conflict-equivalent\">conflict equivalent</a></p>\n</li>\n<li>\n<p><a href=\"#conflict-serializable\">conflict serializable</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n</ul>","frontmatter":{"title":"동시성 제어(serializability)","date":"2025년 01월 13일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/DB/2025-01-13-동시성-제어(serializability)/","previous":{"fields":{"slug":"/lecture/DB/2025-01-12-transaction/"},"frontmatter":{"categories":["DB"],"title":"transaction","date":"2025-01-12 18:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/DB/2025-01-14-동시성-제어(recoverability)/"},"frontmatter":{"categories":["DB"],"title":"동시성 제어(recoverability)","date":"2025-01-14 18:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}