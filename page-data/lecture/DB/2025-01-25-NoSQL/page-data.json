{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/DB/2025-01-25-NoSQL/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"rdb-단점\" style=\"position:relative;\"><a href=\"#rdb-%EB%8B%A8%EC%A0%90\" aria-label=\"rdb 단점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RDB 단점</h1>\n<ul>\n<li>경직된 스키마, 유연한 확장 어려움</li>\n<li>운영중인 로우가 많은 DB에 새로운 컬럼을 추가하는 것이 어려움</li>\n<li>많아지는 테이블과 과도한 조인으로 성능 하락</li>\n<li><code class=\"language-text\">scale-out</code> 어려움, 특히 레플리카를 사용하여 <code class=\"language-text\">read</code>는 많이 수용가능하나 <code class=\"language-text\">write</code>는 한계</li>\n<li>트랜잭션 ACID로 인하여 성능 하락</li>\n</ul>\n<h1 id=\"nosql\" style=\"position:relative;\"><a href=\"#nosql\" aria-label=\"nosql permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NoSQL</h1>\n<p>2000년대 SNS 서비스의 발전으로 데이터 양이 기하급수적으로 증가하면서 기존 RDB의 성능 한계를 느낌<br>\n또한, 성능 측면에서만 아닌 예상할 수 없는 다양한 형태의 데이터를 받게되면서 기존 RDB의 스키마 설계 어려움을 느낌<br>\n아래는 <code class=\"language-text\">MongoDB</code>를 기준으로 설명</p>\n<h2 id=\"유연한-스키마\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EC%97%B0%ED%95%9C-%EC%8A%A4%ED%82%A4%EB%A7%88\" aria-label=\"유연한 스키마 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유연한 스키마</h2>\n<p>각 테이블을 <code class=\"language-text\">collection</code>으로 지칭, 각 튜플을 <code class=\"language-text\">document</code>로 지칭<br>\n스키마가 따로 없고 어떠한 형태의 <code class=\"language-text\">document</code>도 <code class=\"language-text\">json</code> 형식으로 저장 가능</p>\n<blockquote>\n<p>즉, RDB에서 해주는 데이터 타입 검증, 제약 조건, 관계 설정 등을 모두 해주지 않음<br>\n애플리케이션측에서 관리가 필요함</p>\n</blockquote>\n<h2 id=\"중복-허용\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EB%B3%B5-%ED%97%88%EC%9A%A9\" aria-label=\"중복 허용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중복 허용</h2>\n<p>조인을 최소화하기 위해 중복을 허용함<br>\n주문 목록 <code class=\"language-text\">collection</code>에 모든 <code class=\"language-text\">document</code>에 주문자 정보가 들어가 있음(RDB라면 주문자 정보를 가진 <code class=\"language-text\">table</code>을 분리하고 조인)</p>\n<blockquote>\n<p>중복을 허용하므로 데이터 일관성을 유지하기 어려움<br>\n만약 주문자의 전화번호가 바뀐다면 모든 <code class=\"language-text\">document</code>에 전화번호를 업데이트 해야함<br>\n이러한 중복 데이터의 최신화 관리를 애플리케이션측에서 해야함</p>\n</blockquote>\n<h2 id=\"쉬운-scale-out\" style=\"position:relative;\"><a href=\"#%EC%89%AC%EC%9A%B4-scale-out\" aria-label=\"쉬운 scale out permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쉬운 scale-out</h2>\n<p><code class=\"language-text\">collection</code>을 여러 서버에 분산하며 하나의 클러스터로 구성하여 사용<br>\nRDB라면 다른 서버의 테이블끼리 조인해야함</p>\n<h2 id=\"high-throughput-low-latency\" style=\"position:relative;\"><a href=\"#high-throughput-low-latency\" aria-label=\"high throughput low latency permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>high-throughput, low-latency</h2>\n<p>ACID의 일부를 포기하고 <code class=\"language-text\">high-throughput</code>(단위 시간당 높은 처리량)과 <code class=\"language-text\">low-latency</code>(낮은 응답 시간)를 추구</p>\n<h1 id=\"redis\" style=\"position:relative;\"><a href=\"#redis\" aria-label=\"redis permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis</h1>\n<p><code class=\"language-text\">key-value</code> 형식의 빠른 데이터 저장소<br>\n<code class=\"language-text\">in-memory</code> 데이터베이스로 데이터를 메모리에 저장하여 빠른 응답 속도를 제공<br>\n캐시로 사용되기도 함</p>\n<h2 id=\"redis를-캐시로-사용\" style=\"position:relative;\"><a href=\"#redis%EB%A5%BC-%EC%BA%90%EC%8B%9C%EB%A1%9C-%EC%82%AC%EC%9A%A9\" aria-label=\"redis를 캐시로 사용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redis를 캐시로 사용</h2>\n<p>HDD에 저장된 DB에 접근하기 전에 <code class=\"language-text\">Redis</code>에 데이터가 있는지 확인<br>\n<code class=\"language-text\">cache miss</code>가 발생하면 HDD에 접근하여 데이터를 가져옴<br>\n이후 <code class=\"language-text\">Redis</code>에 데이터를 저장 및 저장할 시간 설정<br>\n똑같은 요청에 대하여 <code class=\"language-text\">cache hit</code>이 발생하여 더 빠른 응답 속도를 제공</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#rdb-%EB%8B%A8%EC%A0%90\">RDB 단점</a></p>\n</li>\n<li>\n<p><a href=\"#nosql\">NoSQL</a></p>\n<ul>\n<li><a href=\"#%EC%9C%A0%EC%97%B0%ED%95%9C-%EC%8A%A4%ED%82%A4%EB%A7%88\">유연한 스키마</a></li>\n<li><a href=\"#%EC%A4%91%EB%B3%B5-%ED%97%88%EC%9A%A9\">중복 허용</a></li>\n<li><a href=\"#%EC%89%AC%EC%9A%B4-scale-out\">쉬운 scale-out</a></li>\n<li><a href=\"#high-throughput-low-latency\">high-throughput, low-latency</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#redis\">Redis</a></p>\n<ul>\n<li><a href=\"#redis%EB%A5%BC-%EC%BA%90%EC%8B%9C%EB%A1%9C-%EC%82%AC%EC%9A%A9\">Redis를 캐시로 사용</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"NoSQL","date":"2025년 01월 25일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/DB/2025-01-25-NoSQL/","previous":{"fields":{"slug":"/lecture/DB/2025-01-24-DBCP/"},"frontmatter":{"categories":["DB"],"title":"DBCP","date":"2025-01-24 18:00:00 +0900","tags":["CS"]}},"next":null}},"staticQueryHashes":[],"slicesMap":{}}