{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/OS/2023-02-11-스레드-풀/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"thread-per-request-model\" style=\"position:relative;\"><a href=\"#thread-per-request-model\" aria-label=\"thread per request model permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thread per Request model</h1>\n<ul>\n<li>요청마다 하나의 스레드를 생성하여 요청을 처리</li>\n<li>요청마다 스레드를 생성하고 삭제하는 과정이 비효율적</li>\n<li>많은 요청에 너무 많은 스레드 생성 시 컨텍스트 스위칭 비용이 커짐</li>\n<li>많아지는 스레드는 메모리 부족 문제 발생</li>\n</ul>\n<h1 id=\"thread-pool\" style=\"position:relative;\"><a href=\"#thread-pool\" aria-label=\"thread pool permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thread Pool</h1>\n<ul>\n<li>스레드를 미리 만들어놓고 재사용</li>\n<li>사용시 가져가고 반납하는 식으로 운용</li>\n<li>제한된 스레드 개수로 운용 => 무제한 스레드 증가 방지</li>\n<li>task를 subtask로 나누어 동시에 처리에도 사용\n<ul>\n<li>1부터 100까지 더하는 작업은 순서가 상관없이 동시 실행 가능</li>\n<li>1부터 50까지 더하는 작업과 51부터 100까지 더하는 작업은 2개의 스레드에서 병렬 실행</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/50512b4e-486c-4239-bbeb-05bf6baecc67\" alt=\"Image\"></p>\n<blockquote>\n<p>스레드 풀의 스레드의 적정 개수는<br>\nCPU bound인 경우 코어 수 만큼 혹은 코어 수 + 1, 2\r\nI/O bound인 경우 코어 수 * 1.5, 2, 3 등 다양</p>\n</blockquote>\n<h1 id=\"thread-pool의-큐-사이즈\" style=\"position:relative;\"><a href=\"#thread-pool%EC%9D%98-%ED%81%90-%EC%82%AC%EC%9D%B4%EC%A6%88\" aria-label=\"thread pool의 큐 사이즈 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thread Pool의 큐 사이즈</h1>\n<ul>\n<li>스레드 풀에서 스레드 사용을 기다리는 큐가 존재</li>\n<li>해당 큐의 사이즈 제한이 없다면 메모리 부족 문제 발생 가능성</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/21904e0d-a0d9-477e-91ab-5d5c156dabfc\" alt=\"Image\"></p>\n<h1 id=\"자바와-파이썬의-스레드-풀\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%99%80-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9D%98-%EC%8A%A4%EB%A0%88%EB%93%9C-%ED%92%80\" aria-label=\"자바와 파이썬의 스레드 풀 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바와 파이썬의 스레드 풀</h1>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"93310387496771200000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`ExecutorService threadPool = Executors.newFixedThreadPool(10);`, `93310387496771200000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ExecutorService</span> threadPool <span class=\"token operator\">=</span> <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">newFixedThreadPool</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"89804357251458730000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`thread_pool = ThreadPoolExecutor(max_workers=10)`, `89804357251458730000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">thread_pool <span class=\"token operator\">=</span> ThreadPoolExecutor<span class=\"token punctuation\">(</span>max_workers<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>두 언어에서 스레드 풀의 큐 사이즈는 무한임<br>\n따라서 메모리 부족 문제 발생 가능성이 있음</p>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"#thread-per-request-model\">Thread per Request model</a></li>\n<li><a href=\"#thread-pool\">Thread Pool</a></li>\n<li><a href=\"#thread-pool%EC%9D%98-%ED%81%90-%EC%82%AC%EC%9D%B4%EC%A6%88\">Thread Pool의 큐 사이즈</a></li>\n<li><a href=\"#%EC%9E%90%EB%B0%94%EC%99%80-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9D%98-%EC%8A%A4%EB%A0%88%EB%93%9C-%ED%92%80\">자바와 파이썬의 스레드 풀</a></li>\n</ul>","frontmatter":{"title":"스레드 풀","date":"2023년 02월 11일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/OS/2023-02-11-스레드-풀/","previous":{"fields":{"slug":"/lecture/OS/2023-02-10-스레드의-종류/"},"frontmatter":{"categories":["OS"],"title":"스레드의 종류","date":"2023-02-10 09:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/OS/2023-02-12-block-IO와-non-block-IO/"},"frontmatter":{"categories":["OS"],"title":"block IO와 non-block IO","date":"2023-02-12 09:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}