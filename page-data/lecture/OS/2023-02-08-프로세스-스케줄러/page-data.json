{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/OS/2023-02-08-프로세스-스케줄러/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"프로세스-상태-변화\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%81%ED%83%9C-%EB%B3%80%ED%99%94\" aria-label=\"프로세스 상태 변화 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스 상태 변화</h1>\n<ul>\n<li>프로세스 생성</li>\n<li>프로세스 준비\n<ul>\n<li>새로 생성되거나 실행되던 프로세스가 CPU Time을 다 쓰고 준비비</li>\n</ul>\n</li>\n<li>프로세스 실행\n<ul>\n<li>준비 상태의 프로세스가 CPU를 할당받아 실행</li>\n<li>이 준비 => 실행되는 규칙이 스케줄러에 의해 결정됨</li>\n</ul>\n</li>\n<li>프로세스 대기\n<ul>\n<li>실행 상태의 프로세스가 IO 이벤트로 혹은 임계영역에 들어가기 위한 대기</li>\n</ul>\n</li>\n<li>프로세스 종료\n<ul>\n<li>실행 상태의 프로세스가 종료</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/58c7cd40-03cc-47e5-8cbf-7895377af886\" alt=\"Image\"></p>\n<h1 id=\"scheduler\" style=\"position:relative;\"><a href=\"#scheduler\" aria-label=\"scheduler permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scheduler</h1>\n<p><code class=\"language-text\">ready</code> 상태의 프로세스들은 <code class=\"language-text\">ready queue</code>에 저장되어 있음<br>\n<code class=\"language-text\">ready queue</code>에 있는 프로세스들 중 어떤 프로세스를 실행할지 결정하는 것이 스케줄러\r\n<img src=\"https://github.com/user-attachments/assets/de9e9e6e-182e-4318-a46e-63d52ca9fcaa\" alt=\"Image\"></p>\n<h1 id=\"dispatcher\" style=\"position:relative;\"><a href=\"#dispatcher\" aria-label=\"dispatcher permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dispatcher</h1>\n<p>스케줄러가 실행하기로 한 프로세스를 실제로 <code class=\"language-text\">running</code> 상태로 전환하는 것을 담당하는 것이 dispatcher</p>\n<ul>\n<li><code class=\"language-text\">Context Switching</code>을 담당</li>\n<li><code class=\"language-text\">kernel mode</code>에서 <code class=\"language-text\">user mode</code>로 전환</li>\n<li>실행할 프로세스가 적절한 메모리 위치로 이동하도록</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">Context Switching</code>은 <code class=\"language-text\">kernel mode</code>에서 이루어지는데<br>\n프로세스가 실행되면 권한을 프로세스로 넘겨주는 <code class=\"language-text\">user mode</code>로 돌아감</p>\n</blockquote>\n<h1 id=\"스케줄링-방식\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EB%B0%A9%EC%8B%9D\" aria-label=\"스케줄링 방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스케줄링 방식</h1>\n<h2 id=\"non-preemptive-scheduling\" style=\"position:relative;\"><a href=\"#non-preemptive-scheduling\" aria-label=\"non preemptive scheduling permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-preemptive scheduling</h2>\n<p>프로세스가 자발적으로 자신의 자원을 반납하고 OS는 강제할 수 없음<br>\n즉, 실행중인 프로세스는 자발적으로 <code class=\"language-text\">ready</code>, <code class=\"language-text\">waiting</code>, <code class=\"language-text\">terminated</code> 상태로 전환되는 것만 가능<br>\n이 방식의 알고리즘들은 단지 <code class=\"language-text\">ready queue</code>에 있는 프로세스들을 줄 세우는 것만 필요</p>\n<ul>\n<li><code class=\"language-text\">Context Switching</code>이 적음</li>\n<li>응답시간이 길어질 수 있음</li>\n</ul>\n<h3 id=\"fcfs-first-come-first-served\" style=\"position:relative;\"><a href=\"#fcfs-first-come-first-served\" aria-label=\"fcfs first come first served permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FCFS (First-Come, First-Served)</h3>\n<ul>\n<li>먼저 도착한 프로세스가 먼저 실행됨</li>\n</ul>\n<h3 id=\"sjf-shortest-job-first\" style=\"position:relative;\"><a href=\"#sjf-shortest-job-first\" aria-label=\"sjf shortest job first permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SJF (Shortest Job First)</h3>\n<ul>\n<li>다음 <code class=\"language-text\">cpu burst</code>가 짧은 프로세스부터 실행</li>\n</ul>\n<h2 id=\"preemptive-scheduling\" style=\"position:relative;\"><a href=\"#preemptive-scheduling\" aria-label=\"preemptive scheduling permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preemptive scheduling</h2>\n<p>실행중인 프로세스는 OS가 강제하여 상태를 변화시키고 자원을 빼앗을 수 있음<br>\n우선순위의 높은 프로세스가 <code class=\"language-text\">ready</code> 상태로 전환되면 실행중인 프로세스를 중단하고 우선순위가 높은 프로세스를 실행</p>\n<ul>\n<li>데이터 일관성 문제가 발생할 수 있음</li>\n<li>데이터 일관성 문제가 발생하지 않도록 하는 것이 <code class=\"language-text\">mutex</code>, <code class=\"language-text\">semaphore</code> 등</li>\n</ul>\n<h3 id=\"srtf-shortest-remaining-time-first\" style=\"position:relative;\"><a href=\"#srtf-shortest-remaining-time-first\" aria-label=\"srtf shortest remaining time first permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SRTF (Shortest Remaining Time First)</h3>\n<ul>\n<li>다음 <code class=\"language-text\">cpu burst</code>가 짧은 프로세스부터 실행</li>\n<li><code class=\"language-text\">SJF</code>와 동일하나 선점 방식이므로 실행중이던 프로세스의 <code class=\"language-text\">cpu burst</code>보다 더 짧은 프로세스가 <code class=\"language-text\">ready queue</code>에 들어오면 자리 빼앗음</li>\n</ul>\n<h3 id=\"round-robin\" style=\"position:relative;\"><a href=\"#round-robin\" aria-label=\"round robin permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Round Robin</h3>\n<ul>\n<li>각 프로세스가 일정 시간동안 실행되고 끝나면 다음 프로세스로 넘어감</li>\n<li>모든 프로세스는 동일한 <code class=\"language-text\">burst time</code>을 사용</li>\n</ul>\n<h3 id=\"multilevel-queue\" style=\"position:relative;\"><a href=\"#multilevel-queue\" aria-label=\"multilevel queue permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multilevel Queue</h3>\n<ul>\n<li>여러 종류의 <code class=\"language-text\">ready queue</code>를 사용하여 큐 사이의 우선순위 부여</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%81%ED%83%9C-%EB%B3%80%ED%99%94\">프로세스 상태 변화</a></p>\n</li>\n<li>\n<p><a href=\"#scheduler\">scheduler</a></p>\n</li>\n<li>\n<p><a href=\"#dispatcher\">dispatcher</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EB%B0%A9%EC%8B%9D\">스케줄링 방식</a></p>\n<ul>\n<li>\n<p><a href=\"#non-preemptive-scheduling\">Non-preemptive scheduling</a></p>\n<ul>\n<li><a href=\"#fcfs-first-come-first-served\">FCFS (First-Come, First-Served)</a></li>\n<li><a href=\"#sjf-shortest-job-first\">SJF (Shortest Job First)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#preemptive-scheduling\">Preemptive scheduling</a></p>\n<ul>\n<li><a href=\"#srtf-shortest-remaining-time-first\">SRTF (Shortest Remaining Time First)</a></li>\n<li><a href=\"#round-robin\">Round Robin</a></li>\n<li><a href=\"#multilevel-queue\">Multilevel Queue</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"프로세스 스케줄러","date":"2023년 02월 08일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/OS/2023-02-08-프로세스-스케줄러/","previous":{"fields":{"slug":"/lecture/OS/2023-02-07-Dead-Lock/"},"frontmatter":{"categories":["OS"],"title":"Dead Lock","date":"2023-02-07 09:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/OS/2023-02-09-인터럽트와-시스템-콜/"},"frontmatter":{"categories":["OS"],"title":"인터럽트와 시스템 콜","date":"2023-02-09 09:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}