{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/OS/2023-02-13-비동기의-다양한-의미/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"asynchronous-programming\" style=\"position:relative;\"><a href=\"#asynchronous-programming\" aria-label=\"asynchronous programming permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>asynchronous programming</h1>\n<ul>\n<li>여러 작업을 동시에 실행하는 방법론</li>\n<li><code class=\"language-text\">multiThreading</code>, <code class=\"language-text\">non-blocking IO</code> 등으로 실제 구현됨</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/41d4365b-4f3b-4623-a02e-44e206913073\" alt=\"Image\"></p>\n<blockquote>\n<p>멀티 스레딩은 다수의 스레드로 병렬 처리<br>\nnon-blocking IO는 하나의 스레드가 IO 작업을 요청해두고 기다리는 동안 다른 작업 진행</p>\n</blockquote>\n<h1 id=\"asynchronous-io\" style=\"position:relative;\"><a href=\"#asynchronous-io\" aria-label=\"asynchronous io permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>asynchronous IO</h1>\n<p>비동기 IO란 구체적으로 어떤 것을 지칭하는지 맥락에 따라 상의</p>\n<h2 id=\"case-1\" style=\"position:relative;\"><a href=\"#case-1\" aria-label=\"case 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>case 1</h2>\n<ul>\n<li><code class=\"language-text\">synchronous IO</code> : <code class=\"language-text\">blocking IO</code>를 의미</li>\n<li><code class=\"language-text\">asynchronous IO</code> : <code class=\"language-text\">non-blocking IO</code>를 의미</li>\n</ul>\n<h2 id=\"case-2\" style=\"position:relative;\"><a href=\"#case-2\" aria-label=\"case 2 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>case 2</h2>\n<ul>\n<li><code class=\"language-text\">synchronous IO</code> : 요청 주체가 IO 완료까지 신경 써야할 때</li>\n<li><code class=\"language-text\">asynchronous IO</code> : 완료에대해 알림을 주거나 <code class=\"language-text\">callback</code>을 통해 처리</li>\n</ul>\n<h2 id=\"case-3\" style=\"position:relative;\"><a href=\"#case-3\" aria-label=\"case 3 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>case 3</h2>\n<ul>\n<li><code class=\"language-text\">asynchronous IO</code> : <code class=\"language-text\">blocking IO</code>를 다른 스레드에서 처리</li>\n</ul>\n<p><img src=\"https://github.com/user-attachments/assets/ee8b4547-d664-4149-8825-e996b80b14c2\" alt=\"Image\"></p>\n<h1 id=\"백엔드-아키텍처에서-synchronous와-asynchronous\" style=\"position:relative;\"><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EC%97%90%EC%84%9C-synchronous%EC%99%80-asynchronous\" aria-label=\"백엔드 아키텍처에서 synchronous와 asynchronous permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>백엔드 아키텍처에서 synchronous와 asynchronous</h1>\n<h2 id=\"msa에서-각-서비스가-api로-통신\" style=\"position:relative;\"><a href=\"#msa%EC%97%90%EC%84%9C-%EA%B0%81-%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%80-api%EB%A1%9C-%ED%86%B5%EC%8B%A0\" aria-label=\"msa에서 각 서비스가 api로 통신 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MSA에서 각 서비스가 API로 통신</h2>\n<p><img src=\"https://github.com/user-attachments/assets/3be2c1cb-526c-4153-913a-78b7153203f3\" alt=\"Image\"></p>\n<ul>\n<li>만약 서비스 C에서 응답이 안오면 서비스 B와 A도 문제가 생길 수 있음</li>\n</ul>\n<h2 id=\"msa에서-메세지-큐를-활용한-통신\" style=\"position:relative;\"><a href=\"#msa%EC%97%90%EC%84%9C-%EB%A9%94%EC%84%B8%EC%A7%80-%ED%81%90%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%86%B5%EC%8B%A0\" aria-label=\"msa에서 메세지 큐를 활용한 통신 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MSA에서 메세지 큐를 활용한 통신</h2>\n<p><img src=\"https://github.com/user-attachments/assets/09934078-d52b-42c8-97c9-c18acbbbd0e0\" alt=\"Image\"></p>\n<ul>\n<li>각 서비스는 메세지 큐에 <code class=\"language-text\">produce</code>, <code class=\"language-text\">consume</code> 하는 방식으로 통신</li>\n<li>단, 일방적인 정보 전달에만 해당</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#asynchronous-programming\">asynchronous programming</a></p>\n</li>\n<li>\n<p><a href=\"#asynchronous-io\">asynchronous IO</a></p>\n<ul>\n<li><a href=\"#case-1\">case 1</a></li>\n<li><a href=\"#case-2\">case 2</a></li>\n<li><a href=\"#case-3\">case 3</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EC%97%90%EC%84%9C-synchronous%EC%99%80-asynchronous\">백엔드 아키텍처에서 synchronous와 asynchronous</a></p>\n<ul>\n<li><a href=\"#msa%EC%97%90%EC%84%9C-%EA%B0%81-%EC%84%9C%EB%B9%84%EC%8A%A4%EA%B0%80-api%EB%A1%9C-%ED%86%B5%EC%8B%A0\">MSA에서 각 서비스가 API로 통신</a></li>\n<li><a href=\"#msa%EC%97%90%EC%84%9C-%EB%A9%94%EC%84%B8%EC%A7%80-%ED%81%90%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%ED%86%B5%EC%8B%A0\">MSA에서 메세지 큐를 활용한 통신</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"비동기의 다양한 의미","date":"2023년 02월 13일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/OS/2023-02-13-비동기의-다양한-의미/","previous":{"fields":{"slug":"/lecture/OS/2023-02-12-block-IO와-non-block-IO/"},"frontmatter":{"categories":["OS"],"title":"block IO와 non-block IO","date":"2023-02-12 09:00:00 +0900","tags":["CS"]}},"next":null}},"staticQueryHashes":[],"slicesMap":{}}