{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/OS/2023-02-07-Dead-Lock/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"교착-상태dead-lock\" style=\"position:relative;\"><a href=\"#%EA%B5%90%EC%B0%A9-%EC%83%81%ED%83%9Cdead-lock\" aria-label=\"교착 상태dead lock permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>교착 상태(Dead Lock)</h1>\n<ul>\n<li>2개 이상의 프로세스/스레드가 서로가 가진 리소스를 기다림</li>\n<li>더이상 진행이 안됨</li>\n</ul>\n<h2 id=\"교착-상태-발생-조건\" style=\"position:relative;\"><a href=\"#%EA%B5%90%EC%B0%A9-%EC%83%81%ED%83%9C-%EB%B0%9C%EC%83%9D-%EC%A1%B0%EA%B1%B4\" aria-label=\"교착 상태 발생 조건 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>교착 상태 발생 조건</h2>\n<ul>\n<li><code class=\"language-text\">Mutual Exclusion</code> : 리소스가 공유해서 사용할 수 없는 리소스이다.</li>\n<li><code class=\"language-text\">Hold and Wait</code> : 프로세스가 자원을 가지고 있으면서 다른 자원을 기다린다.</li>\n<li><code class=\"language-text\">No Preemption</code> : 프로세스가 소유한 리소스를 다른 프로세스는 빼앗을 수 없다.</li>\n<li><code class=\"language-text\">Circular Wait</code> : 프로세스가 자원을 기다리는 것이 사이클을 이룬다.</li>\n</ul>\n<h1 id=\"os의-데드락-해결-방법\" style=\"position:relative;\"><a href=\"#os%EC%9D%98-%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"os의 데드락 해결 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OS의 데드락 해결 방법</h1>\n<h2 id=\"데드락-방지\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%EB%B0%A9%EC%A7%80\" aria-label=\"데드락 방지 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데드락 방지</h2>\n<p>4가지 조건 중 하나가 충족되지 않도록 시스템을 디자인</p>\n<h3 id=\"mutual-exclusion-방지\" style=\"position:relative;\"><a href=\"#mutual-exclusion-%EB%B0%A9%EC%A7%80\" aria-label=\"mutual exclusion 방지 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mutual Exclusion 방지</h3>\n<ul>\n<li>리소스를 공유할 수 있도록 설계</li>\n<li>프린터 같이 실제 한번에 사용 못하는 자원 존재</li>\n<li>값에 대하여 오류 발생</li>\n<li>사실상 불가능</li>\n</ul>\n<h3 id=\"hold-and-wait-방지\" style=\"position:relative;\"><a href=\"#hold-and-wait-%EB%B0%A9%EC%A7%80\" aria-label=\"hold and wait 방지 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hold and Wait 방지</h3>\n<ul>\n<li>사용할 리소스를 모두 획득하고 시작</li>\n<li>리소스를 전혀 가지지 않은 상태에서만 다른 리소스 요청</li>\n<li>리소스 사용이 비효율적</li>\n</ul>\n<h3 id=\"no-preemption-방지\" style=\"position:relative;\"><a href=\"#no-preemption-%EB%B0%A9%EC%A7%80\" aria-label=\"no preemption 방지 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>No Preemption 방지</h3>\n<ul>\n<li>추가적인 리소스를 기다려야 한다면, 소유한 리소스를 다른 프로세스가 뺏을 수 있도록</li>\n</ul>\n<h3 id=\"circular-wait-방지\" style=\"position:relative;\"><a href=\"#circular-wait-%EB%B0%A9%EC%A7%80\" aria-label=\"circular wait 방지 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Circular Wait 방지</h3>\n<ul>\n<li>모든 리소스에 순서 체계를 부여, 오름차순으로 리소스 요청</li>\n<li>리소스1과 리소스2가 필요할 때, 리소스1 -> 리소스2 순으로 요청</li>\n</ul>\n<h2 id=\"데드락-회피\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%9A%8C%ED%94%BC\" aria-label=\"데드락 회피 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데드락 회피</h2>\n<p>실행 환경에서 추가적인 정보로 데드락 발생할 것 같은 상황을 회피</p>\n<h3 id=\"bankers-algorithm\" style=\"position:relative;\"><a href=\"#bankers-algorithm\" aria-label=\"bankers algorithm permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Banker’s Algorithm</h3>\n<ul>\n<li>리소스 요청을 허락했을 때, 데드락 발생 가능성이 있다면 거절</li>\n<li>데드락 발생 가능성이 없을 때 까지 계속 리소스 요청 거절</li>\n</ul>\n<h2 id=\"데드락-감지와-복구\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%EA%B0%90%EC%A7%80%EC%99%80-%EB%B3%B5%EA%B5%AC\" aria-label=\"데드락 감지와 복구 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데드락 감지와 복구</h2>\n<p>데드락을 허용하고 발생시 복구</p>\n<h3 id=\"프로세스-종료\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%A2%85%EB%A3%8C\" aria-label=\"프로세스 종료 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스 종료</h3>\n<ul>\n<li>데드락 발생 시 프로세스 종료</li>\n<li>데드락이 종료될 때까지 프로세스를 하나씩 종료</li>\n<li>프로세스 종료 시 할당된 모든 자원 반납</li>\n</ul>\n<h3 id=\"리소스의-일시적인-선점-허용\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4%EC%9D%98-%EC%9D%BC%EC%8B%9C%EC%A0%81%EC%9D%B8-%EC%84%A0%EC%A0%90-%ED%97%88%EC%9A%A9\" aria-label=\"리소스의 일시적인 선점 허용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리소스의 일시적인 선점 허용</h3>\n<ul>\n<li>데드락 발생 시 일시적으로 리소스를 뺏을 수 있도록</li>\n</ul>\n<h1 id=\"프로그래밍밍의-데드락-해결-방법\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EB%B0%8D%EC%9D%98-%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"프로그래밍밍의 데드락 해결 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍밍의 데드락 해결 방법</h1>\n<h2 id=\"데드락-발생-예시\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%EB%B0%9C%EC%83%9D-%EC%98%88%EC%8B%9C\" aria-label=\"데드락 발생 예시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데드락 발생 예시</h2>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"76837765008312400000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`public class Main {\r\n  public static void main(String[] args) {\r\n    Object lock1 = new Object();\r\n    Object lock2 = new Object();\r\n\r\n    Thread t1 = new Thread(() -> {\r\n      synchronized (lock1) {\r\n        // critical section1\r\n        synchronized (lock2) {\r\n          // critical section2\r\n        }\r\n      }\r\n    });\r\n    \r\n    Thread t2 = new Thread(() -> {\r\n      synchronized (lock2) {\r\n        // critical section2\r\n        synchronized (lock1) {\r\n          // critical section1\r\n        }\r\n      }\r\n    });\r\n\r\n    t1.start();\r\n    t2.start();\r\n  }\r\n}`, `76837765008312400000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token class-name\">Object</span> lock1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token class-name\">Object</span> lock2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">Thread</span> t1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>lock1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// critical section1</span>\r\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>lock2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// critical section2</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token class-name\">Thread</span> t2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>lock2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// critical section2</span>\r\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>lock1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// critical section1</span>\r\n        <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    t1<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    t2<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"데드락-해결-방법\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"데드락 해결 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데드락 해결 방법</h2>\n<ul>\n<li><code class=\"language-text\">Mutual Exclusion</code> 사용하지 않고 해결가능 한지</li>\n<li><code class=\"language-text\">lock1</code>, <code class=\"language-text\">lock2</code>이 중첩이 필요한지</li>\n<li>t1, t2 모두 lock1, lock2을 똑같은 순서로 요청하도록</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B5%90%EC%B0%A9-%EC%83%81%ED%83%9Cdead-lock\">교착 상태(Dead Lock)</a></p>\n<ul>\n<li><a href=\"#%EA%B5%90%EC%B0%A9-%EC%83%81%ED%83%9C-%EB%B0%9C%EC%83%9D-%EC%A1%B0%EA%B1%B4\">교착 상태 발생 조건</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#os%EC%9D%98-%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">OS의 데드락 해결 방법</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%EB%B0%A9%EC%A7%80\">데드락 방지</a></p>\n<ul>\n<li><a href=\"#mutual-exclusion-%EB%B0%A9%EC%A7%80\">Mutual Exclusion 방지</a></li>\n<li><a href=\"#hold-and-wait-%EB%B0%A9%EC%A7%80\">Hold and Wait 방지</a></li>\n<li><a href=\"#no-preemption-%EB%B0%A9%EC%A7%80\">No Preemption 방지</a></li>\n<li><a href=\"#circular-wait-%EB%B0%A9%EC%A7%80\">Circular Wait 방지</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%9A%8C%ED%94%BC\">데드락 회피</a></p>\n<ul>\n<li><a href=\"#bankers-algorithm\">Banker’s Algorithm</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%EA%B0%90%EC%A7%80%EC%99%80-%EB%B3%B5%EA%B5%AC\">데드락 감지와 복구</a></p>\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%A2%85%EB%A3%8C\">프로세스 종료</a></li>\n<li><a href=\"#%EB%A6%AC%EC%86%8C%EC%8A%A4%EC%9D%98-%EC%9D%BC%EC%8B%9C%EC%A0%81%EC%9D%B8-%EC%84%A0%EC%A0%90-%ED%97%88%EC%9A%A9\">리소스의 일시적인 선점 허용</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EB%B0%8D%EC%9D%98-%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">프로그래밍밍의 데드락 해결 방법</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%EB%B0%9C%EC%83%9D-%EC%98%88%EC%8B%9C\">데드락 발생 예시</a></li>\n<li><a href=\"#%EB%8D%B0%EB%93%9C%EB%9D%BD-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">데드락 해결 방법</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Dead Lock","date":"2023년 02월 07일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/OS/2023-02-07-Dead-Lock/","previous":{"fields":{"slug":"/lecture/OS/2023-02-06-동기화/"},"frontmatter":{"categories":["OS"],"title":"동기화","date":"2023-02-06 09:00:00 +0900","tags":["CS"]}},"next":{"fields":{"slug":"/lecture/OS/2023-02-08-프로세스-스케줄러/"},"frontmatter":{"categories":["OS"],"title":"프로세스 스케줄러","date":"2023-02-08 09:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}