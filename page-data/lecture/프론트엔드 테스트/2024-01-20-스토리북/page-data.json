{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/프론트엔드 테스트/2024-01-20-스토리북/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"0-들어가며\" style=\"position:relative;\"><a href=\"#0-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\" aria-label=\"0 들어가며 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 들어가며</h2>\n<p><code class=\"language-text\">Storybook</code>의 정의와 사용법에 대해 정리</p>\n<h2 id=\"1-스토리북-시작하기\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"1 스토리북 시작하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 스토리북 시작하기</h2>\n<p>스토리북은 비즈니스 로직 및 컨텍스트(상태, props)의 간섭 없이 컴포넌트를 렌더링하여 UI를 확인할 수 있는 도구이다.<br>\n스토리북의 스토리를 대상으로 스냅샷을 찍어 시각적 회귀 테스트도 진행할 수 있다.</p>\n<h3 id=\"1-스토리북-설정\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-%EC%84%A4%EC%A0%95\" aria-label=\"1 스토리북 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 스토리북 설정</h3>\n<p>스토리북 실행시 필요한 설정은 <code class=\"language-text\">.storybook</code> 폴더에 작성한다.</p>\n<ul>\n<li>필요한 addon을 비롯한 설정 파일</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"40193023245818480000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// .storybook/main.js\r\n/** @type { import('@storybook/react-vite').StorybookConfig } */\r\nconst config = {\r\n  stories: ['../src/**/*.mdx', '../src/**/*.stories.@(js|jsx|ts|tsx)'],\r\n  addons: [\r\n    '@storybook/addon-links',\r\n    '@storybook/addon-essentials',\r\n    // form 요소 값 입력, 버튼 클릭 등의 이벤트를 스토리에서 시뮬레이션 할 수 있도록 설정\r\n    '@storybook/addon-interactions',\r\n    'storybook-addon-react-router-v6',\r\n  ],\r\n  framework: {\r\n    name: '@storybook/react-vite',\r\n    options: {},\r\n  },\r\n  docs: {\r\n    autodocs: 'tag',\r\n  },\r\n};\r\nexport default config;`, `40193023245818480000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// .storybook/main.js</span>\r\n<span class=\"token comment\">/** @type { import('@storybook/react-vite').StorybookConfig } */</span>\r\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">stories</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'../src/**/*.mdx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/**/*.stories.@(js|jsx|ts|tsx)'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">addons</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">'@storybook/addon-links'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'@storybook/addon-essentials'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token comment\">// form 요소 값 입력, 버튼 클릭 등의 이벤트를 스토리에서 시뮬레이션 할 수 있도록 설정</span>\r\n    <span class=\"token string\">'@storybook/addon-interactions'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'storybook-addon-react-router-v6'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">framework</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'@storybook/react-vite'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">docs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">autodocs</span><span class=\"token operator\">:</span> <span class=\"token string\">'tag'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>스토리북에서 사용할 폰트 및 스타일</li>\n<li>기존의 프로젝트에서 구글 폰트를 사용한다면 이 파일에서 구글 폰트를 불러와 스토리북에서도 사용할 수 있도록 설정한다.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"44416877162503400000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`<!-- .storybook/preview-head.html -->\r\n<link\r\n  rel=&quot;stylesheet&quot;\r\n  href=&quot;https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap&quot;\r\n/>`, `44416877162503400000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- .storybook/preview-head.html --></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\r\n  <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\r\n  <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;display=swap<span class=\"token punctuation\">\"</span></span>\r\n<span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>스토리 렌더링 시 전역으로 적용할 공통 설정</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"75027857314062710000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// .storybook/preview.js\r\n/** @type { import('@storybook/react').Preview } */\r\nimport { withRouter } from 'storybook-addon-react-router-v6';\r\nimport { CssBaseline } from '@mui/material';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\nimport { initialize, mswDecorator } from 'msw-storybook-addon';\r\n\r\nimport { handlers } from '../src/__mocks__/handlers';\r\nimport withRHF from './withRHF';\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\n\r\nconst queryClient = new QueryClient();\r\ninitialize({\r\n  onUnhandledRequest: 'bypass',\r\n});\r\n\r\nconst preview = {\r\n  parameters: {\r\n    // 이벤트 핸들러 시에 받은 데이터를 스토리북에서 확인할 수 있도록 설정\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n\r\n    // 코드 변경 없이 props 또는 인자를 바꿔가며 스토리를 확인할 수 있도록 설정\r\n    controls: {\r\n      expanded: true,\r\n      matchers: {\r\n        color: /(background|color)\\$/i,\r\n        date: /Date\\$/,\r\n      },\r\n    },\r\n    \r\n    // 스토리 렌더링 시 API 호출을 가로채서 가짜 응답을 반환하도록 내가 만든 handlers를 msw에 등록\r\n    msw: {\r\n      handlers,\r\n    },\r\n  },\r\n\r\n  // 스토리 렌더링 시 특정 컴포넌트를 감싸는 데코레이터\r\n  decorators: [\r\n    // React Router를 사용하기 위한 HOC\r\n    withRouter,\r\n\r\n    // API 호출을 가로채서 가짜 응답을 반환하도록 msw 사용하겠다는 데코레이터\r\n    mswDecorator,\r\n\r\n    // React Hook Form을 사용하기 위한 HOC\r\n    withRHF(false),\r\n    Story => (\r\n      <QueryClientProvider client={queryClient}>\r\n        <CssBaseline />\r\n        <Story />\r\n      </QueryClientProvider>\r\n    ),\r\n  ],\r\n};\r\n\r\nexport default preview;`, `75027857314062710000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// .storybook/preview.js</span>\r\n<span class=\"token comment\">/** @type { import('@storybook/react').Preview } */</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'storybook-addon-react-router-v6'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CssBaseline <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@mui/material'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> QueryClient<span class=\"token punctuation\">,</span> QueryClientProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@tanstack/react-query'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initialize<span class=\"token punctuation\">,</span> mswDecorator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'msw-storybook-addon'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> handlers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../src/__mocks__/handlers'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> withRHF <span class=\"token keyword\">from</span> <span class=\"token string\">'./withRHF'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> <span class=\"token string\">'swiper/css'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token string\">'swiper/css/navigation'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> queryClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">onUnhandledRequest</span><span class=\"token operator\">:</span> <span class=\"token string\">'bypass'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> preview <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">parameters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// 이벤트 핸들러 시에 받은 데이터를 스토리북에서 확인할 수 있도록 설정</span>\r\n    <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">argTypesRegex</span><span class=\"token operator\">:</span> <span class=\"token string\">'^on[A-Z].*'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n    <span class=\"token comment\">// 코드 변경 없이 props 또는 인자를 바꿔가며 스토리를 확인할 수 있도록 설정</span>\r\n    <span class=\"token literal-property property\">controls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">expanded</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">matchers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(background|color)$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Date$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    \r\n    <span class=\"token comment\">// 스토리 렌더링 시 API 호출을 가로채서 가짜 응답을 반환하도록 내가 만든 handlers를 msw에 등록</span>\r\n    <span class=\"token literal-property property\">msw</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      handlers<span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\">// 스토리 렌더링 시 특정 컴포넌트를 감싸는 데코레이터</span>\r\n  <span class=\"token literal-property property\">decorators</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token comment\">// React Router를 사용하기 위한 HOC</span>\r\n    withRouter<span class=\"token punctuation\">,</span>\r\n\r\n    <span class=\"token comment\">// API 호출을 가로채서 가짜 응답을 반환하도록 msw 사용하겠다는 데코레이터</span>\r\n    mswDecorator<span class=\"token punctuation\">,</span>\r\n\r\n    <span class=\"token comment\">// React Hook Form을 사용하기 위한 HOC</span>\r\n    <span class=\"token function\">withRHF</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token parameter\">Story</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">QueryClientProvider</span></span> <span class=\"token attr-name\">client</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>queryClient<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CssBaseline</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Story</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">QueryClientProvider</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> preview<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>스토리북에서 <code class=\"language-text\">React Hook Form</code>을 사용하기 위한 <code class=\"language-text\">HOC</code> 선언</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"25285243295000547000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// .storybook/withRHF.jsx\r\nimport { action } from '@storybook/addon-actions';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nconst StorybookFormProvider = ({ children }) => {\r\n  const methods = useForm();\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form\r\n        onSubmit={methods.handleSubmit(action('[React Hooks Form] Submit'))}\r\n      >\r\n        {children}\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default showSubmitButton => Story => (\r\n  <StorybookFormProvider>\r\n    <Story />\r\n    {showSubmitButton && <button type=&quot;submit&quot;>Submit</button>}\r\n  </StorybookFormProvider>\r\n);`, `25285243295000547000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// .storybook/withRHF.jsx</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> action <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@storybook/addon-actions'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormProvider<span class=\"token punctuation\">,</span> useForm <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-hook-form'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">StorybookFormProvider</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> methods <span class=\"token operator\">=</span> <span class=\"token function\">useForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormProvider</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>methods<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span>\r\n        <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>methods<span class=\"token punctuation\">.</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[React Hooks Form] Submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\r\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\r\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormProvider</span></span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token parameter\">showSubmitButton</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">Story</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StorybookFormProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Story</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n    </span><span class=\"token punctuation\">{</span>showSubmitButton <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Submit</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\r\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StorybookFormProvider</span></span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"2-스토리-작성\" style=\"position:relative;\"><a href=\"#2-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9E%91%EC%84%B1\" aria-label=\"2 스토리 작성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 스토리 작성</h3>\n<p>스토리북에서 렌더링한 스토리를 따로 작성해야 한다.</p>\n<ul>\n<li>메타데이터 : <code class=\"language-text\">export default</code>로 기본적인 컴포넌트 및 컨트롤러, 데코레이터 등을 설정한다.</li>\n<li>스토리 : <code class=\"language-text\">export const</code>로 여러 경우의 수의 스토리를 작성할 수 있다.</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"8245343980392139000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`import ErrorPage from '@/pages/error/components/ErrorPage';\r\n\r\nexport default {\r\n  // title은 고유한 값이어야 하며, 스토리북의 사이드바에서 스토리를 그룹화하는데 사용된다.\r\n  title: '에러 페이지/기본 에러 페이지',\r\n  component: ErrorPage,\r\n};\r\n\r\nexport const Default = {\r\n  name: '기본 에러 페이지',\r\n};`, `8245343980392139000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> ErrorPage <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/error/components/ErrorPage'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// title은 고유한 값이어야 하며, 스토리북의 사이드바에서 스토리를 그룹화하는데 사용된다.</span>\r\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'에러 페이지/기본 에러 페이지'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> ErrorPage<span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Default <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'기본 에러 페이지'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-컨트롤러-및-인자를-포함한-스토리-작성\" style=\"position:relative;\"><a href=\"#3-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EB%B0%8F-%EC%9D%B8%EC%9E%90%EB%A5%BC-%ED%8F%AC%ED%95%A8%ED%95%9C-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9E%91%EC%84%B1\" aria-label=\"3 컨트롤러 및 인자를 포함한 스토리 작성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 컨트롤러 및 인자를 포함한 스토리 작성</h3>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"4905537943621607000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// home/components/stories/ProductCard.stories.jsx\r\nimport product from '@/__mocks__/response/product.json';\r\nimport ProductCard from '@/pages/home/components/ProductCard';\r\n\r\nexport default {\r\n  title: '홈/상품 카드',\r\n  component: ProductCard,\r\n  argTypes: {\r\n    product: {\r\n      control: 'object',\r\n      description: '상품의 정보',\r\n    },\r\n  },\r\n};\r\n\r\nexport const Default = {\r\n  name: '기본',\r\n  args: {\r\n    product,\r\n  },\r\n};\r\n\r\nexport const LongTitle = {\r\n  args: {\r\n    product: {\r\n      ...product,\r\n      title:\r\n        'Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example',\r\n    },\r\n  },\r\n  name: '타이틀이 긴 경우',\r\n};\r\n\r\nexport const LongCategoryName = {\r\n  args: {\r\n    product: {\r\n      ...product,\r\n      category: {\r\n        name: 'Long Category Long Category Long Category Long Category',\r\n      },\r\n    },\r\n  },\r\n  name: '카테고리가 긴 경우',\r\n};`, `4905537943621607000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// home/components/stories/ProductCard.stories.jsx</span>\r\n<span class=\"token keyword\">import</span> product <span class=\"token keyword\">from</span> <span class=\"token string\">'@/__mocks__/response/product.json'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> ProductCard <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/home/components/ProductCard'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'홈/상품 카드'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> ProductCard<span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">argTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">product</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">control</span><span class=\"token operator\">:</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'상품의 정보'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Default <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'기본'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    product<span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> LongTitle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">product</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token operator\">...</span>product<span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span>\r\n        <span class=\"token string\">'Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example Long title Example'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'타이틀이 긴 경우'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> LongCategoryName <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">args</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token literal-property property\">product</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token operator\">...</span>product<span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">category</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Long Category Long Category Long Category Long Category'</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'카테고리가 긴 경우'</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"16852595782580115000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// product.json\r\n// story의 args로 넘겨줄 데이터\r\n{\r\n  &quot;id&quot;: 6,\r\n  &quot;title&quot;: &quot;Handmade Cotton Fish&quot;,\r\n  &quot;price&quot;: 809,\r\n  &quot;description&quot;: &quot;The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality&quot;,\r\n  &quot;images&quot;: [\r\n    &quot;https://user-images.githubusercontent.com/35371660/230712070-afa23da8-1bda-4cc4-9a59-50a263ee629f.png&quot;,\r\n    &quot;https://user-images.githubusercontent.com/35371660/230711992-01a1a621-cb3d-44a7-b499-20e8d0e1a4bc.png&quot;,\r\n    &quot;https://user-images.githubusercontent.com/35371660/230712056-2c468ef4-45c9-4bad-b379-a9a19d9b79a9.png&quot;\r\n  ],\r\n  &quot;creationAt&quot;: &quot;2023-04-07T20:39:06.000Z&quot;,\r\n  &quot;updatedAt&quot;: &quot;2023-04-07T20:39:06.000Z&quot;,\r\n  &quot;category&quot;: {\r\n    &quot;id&quot;: 1,\r\n    &quot;name&quot;: &quot;category1&quot;,\r\n    &quot;creationAt&quot;: &quot;2023-04-07T20:39:06.000Z&quot;,\r\n    &quot;updatedAt&quot;: &quot;2023-04-07T20:39:06.000Z&quot;\r\n  }\r\n}`, `16852595782580115000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// product.json</span>\r\n<span class=\"token comment\">// story의 args로 넘겨줄 데이터</span>\r\n<span class=\"token punctuation\">{</span>\r\n  <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Handmade Cotton Fish\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"price\"</span><span class=\"token operator\">:</span> <span class=\"token number\">809</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The slim &amp; simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"images\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token string\">\"https://user-images.githubusercontent.com/35371660/230712070-afa23da8-1bda-4cc4-9a59-50a263ee629f.png\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"https://user-images.githubusercontent.com/35371660/230711992-01a1a621-cb3d-44a7-b499-20e8d0e1a4bc.png\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">\"https://user-images.githubusercontent.com/35371660/230712056-2c468ef4-45c9-4bad-b379-a9a19d9b79a9.png\"</span>\r\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"creationAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-04-07T20:39:06.000Z\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"updatedAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-04-07T20:39:06.000Z\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token string-property property\">\"category\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"category1\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string-property property\">\"creationAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-04-07T20:39:06.000Z\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string-property property\">\"updatedAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2023-04-07T20:39:06.000Z\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"4-play-함수-사용하기\" style=\"position:relative;\"><a href=\"#4-play-%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"4 play 함수 사용하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(4) play 함수 사용하기</h3>\n<p><code class=\"language-text\">play</code> 메소드를 사용하면 UI와의 상호작용을 미리 정의해두고 스토리북에서 간단한 조작으로 상호작용을 확인할 수 있다.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"19348789292075086000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`import { within, userEvent } from '@storybook/testing-library';\r\n\r\nimport PriceRange from '@/pages/home/components/PriceRange';\r\n\r\nexport default {\r\n  title: '홈/상품 필터/가격 검색',\r\n  component: PriceRange,\r\n};\r\n\r\nexport const Default = { name: '기본' };\r\n\r\nexport const WithValue = {\r\n  name: '가격이 입력된 상태',\r\n\r\n  // canvasElement : 스토리가 렌더링되는 부분의 루트 엘리먼트\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const [min, max] = canvas.getAllByRole('textbox');\r\n    // min 텍스트 박스에 300 입력\r\n    await userEvent.type(min, '300');\r\n    // max 텍스트 박스에 40000 입력\r\n    await userEvent.type(max, '40000');\r\n  },\r\n};`, `19348789292075086000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> within<span class=\"token punctuation\">,</span> userEvent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@storybook/testing-library'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">import</span> PriceRange <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/home/components/PriceRange'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'홈/상품 필터/가격 검색'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">component</span><span class=\"token operator\">:</span> PriceRange<span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Default <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'기본'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> WithValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'가격이 입력된 상태'</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\">// canvasElement : 스토리가 렌더링되는 부분의 루트 엘리먼트</span>\r\n  <span class=\"token function-variable function\">play</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> canvasElement <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> <span class=\"token function\">within</span><span class=\"token punctuation\">(</span>canvasElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getAllByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textbox'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// min 텍스트 박스에 300 입력</span>\r\n    <span class=\"token keyword\">await</span> userEvent<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">,</span> <span class=\"token string\">'300'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// max 텍스트 박스에 40000 입력</span>\r\n    <span class=\"token keyword\">await</span> userEvent<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">,</span> <span class=\"token string\">'40000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"2-스토리-작성-대상\" style=\"position:relative;\"><a href=\"#2-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9E%91%EC%84%B1-%EB%8C%80%EC%83%81\" aria-label=\"2 스토리 작성 대상 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 스토리 작성 대상</h2>\n<p>스토리는 <code class=\"language-text\">props</code>를 받아 UI만 렌더링하는 컴포넌트에 대해 작성한다, 렌더링 결과를 빠르게 확인하고 <code class=\"language-text\">props</code>에 따라 다른 결과를 쉽게 확인할 수 있기 때문이다.<br>\n또한, 복잡한 비즈니스 로직이 있는 경우 UI 확인을 위한 과한 모킹이 필요하므로 지양한다.</p>\n<p>비즈니스 로직이 모여있는 컴포넌트는 하위의 UI만 렌더링하는 컴포넌트로 상세화하여 스토리를 작성한다. 스토리와 통합 테스트의 대상을 적절하게 나누기 위해서 비즈니스 로직 검증을 위한 컴포넌트와 UI 검증을 위한 컴포넌트가 잘 분리되어야 한다.</p>\n<h2 id=\"3-마치며\" style=\"position:relative;\"><a href=\"#3-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"3 마치며 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 마치며</h2>\n<p><code class=\"language-text\">Custom Hook</code> 패턴을 통한 뷰와 로직 분리만 알고 있었는데, <code class=\"language-text\">Storybook</code>과 통합 테스트를 위한 분리로 상위 컴포넌트에서 로직을 처리하고 결과를 하위 컴포넌트로 전달하는 방식으로 분리하면, 상위 컴포넌트의 로직을 통합 테스트로 검증하고 하위 컴포넌트의 UI를 <code class=\"language-text\">Storybook</code>으로 검증할 수 있을 것 같다.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#0-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\">0. 들어가며</a></p>\n</li>\n<li>\n<p><a href=\"#1-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">1. 스토리북 시작하기</a></p>\n<ul>\n<li><a href=\"#1-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-%EC%84%A4%EC%A0%95\">(1) 스토리북 설정</a></li>\n<li><a href=\"#2-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9E%91%EC%84%B1\">(2) 스토리 작성</a></li>\n<li><a href=\"#3-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EB%B0%8F-%EC%9D%B8%EC%9E%90%EB%A5%BC-%ED%8F%AC%ED%95%A8%ED%95%9C-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9E%91%EC%84%B1\">(3) 컨트롤러 및 인자를 포함한 스토리 작성</a></li>\n<li><a href=\"#4-play-%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">(4) play 함수 사용하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9E%91%EC%84%B1-%EB%8C%80%EC%83%81\">2. 스토리 작성 대상</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EB%A7%88%EC%B9%98%EB%A9%B0\">3. 마치며</a></p>\n</li>\n</ul>","frontmatter":{"title":"스토리북","date":"2024년 01월 19일","tags":["FE","Test"]}}}]}},"pageContext":{"slug":"/lecture/프론트엔드 테스트/2024-01-20-스토리북/","previous":{"fields":{"slug":"/lecture/프론트엔드 테스트/2024-01-20-스냅샷-테스트/"},"frontmatter":{"categories":["프론트엔드 테스트"],"title":"스냅샷 테스트","date":"2024-01-20 04:00:00 +0900","tags":["FE","Test"]}},"next":{"fields":{"slug":"/lecture/프론트엔드 테스트/2024-01-21-시각적-회귀-테스트/"},"frontmatter":{"categories":["프론트엔드 테스트"],"title":"시각적 회귀 테스트","date":"2024-01-21 02:00:00 +0900","tags":["FE","Test"]}}}},"staticQueryHashes":[],"slicesMap":{}}