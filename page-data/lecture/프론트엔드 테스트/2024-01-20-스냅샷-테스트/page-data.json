{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/프론트엔드 테스트/2024-01-20-스냅샷-테스트/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"0-들어가며\" style=\"position:relative;\"><a href=\"#0-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\" aria-label=\"0 들어가며 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 들어가며</h2>\n<p>스냅샷 테스트란 무엇이며, FE에서 스냅샷 테스트를 어떻게 적용할 수 있을까?</p>\n<h2 id=\"1-스냅샷-테스트란\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%9E%80\" aria-label=\"1 스냅샷 테스트란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 스냅샷 테스트란?</h2>\n<p>UI 컴포넌트의 렌더링 결과 또는 함수의 반환값을 저장해두었다가, 이후에 동일한 결과가 나오는지 확인하는 테스트<br>\n이때 저장시 직렬화된 문자열 형태로 저장되며, 이를 스냅샷이라고 함</p>\n<h2 id=\"2-ui-스냅샷-테스트\" style=\"position:relative;\"><a href=\"#2-ui-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"2 ui 스냅샷 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. UI 스냅샷 테스트</h2>\n<h3 id=\"1-스냅샷-테스트-코드-작성\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\" aria-label=\"1 스냅샷 테스트 코드 작성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 스냅샷 테스트 코드 작성</h3>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"37890454110692295000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`import PageTitle from '@/pages/cart/components/PageTitle';\r\nimport render from '@/utils/test/render';\r\n\r\nit('pageTitle 스냅샷 테스트(toMatchInlineSnapshot)', async () => {\r\n  const { container } = await render(<PageTitle />);\r\n\r\n  expect(container).toMatchInlineSnapshot();\r\n});\r\n\r\nit('pageTitle 스냅샷 테스트(toMatchSnapshot)', async () => {\r\n  const { container } = await render(<PageTitle />);\r\n\r\n  expect(container).toMatchSnapshot();\r\n});`, `37890454110692295000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PageTitle <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/cart/components/PageTitle'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/test/render'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pageTitle 스냅샷 테스트(toMatchInlineSnapshot)'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>PageTitle <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pageTitle 스냅샷 테스트(toMatchSnapshot)'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>PageTitle <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">toMatchInlineSnapshot</code> : 직렬화된 문자열을 테스트 파일에 저장</li>\n<li><code class=\"language-text\">toMatchSnapshot</code> : 직렬화된 문자열을 별도 파일을 생성해 저장</li>\n</ul>\n<h3 id=\"2-첫-스냅샷-테스트-실행-및-스냅샷-저장\" style=\"position:relative;\"><a href=\"#2-%EC%B2%AB-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EB%B0%8F-%EC%8A%A4%EB%83%85%EC%83%B7-%EC%A0%80%EC%9E%A5\" aria-label=\"2 첫 스냅샷 테스트 실행 및 스냅샷 저장 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 첫 스냅샷 테스트 실행 및 스냅샷 저장</h3>\n<ul>\n<li>스냅샷 테스트를 실행하면 다음과 같이 결과가 직렬화되어 저장 됨</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"76849510130338780000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`import PageTitle from '@/pages/cart/components/PageTitle';\r\nimport render from '@/utils/test/render';\r\n\r\nit('pageTitle 스냅샷 테스트(toMatchInlineSnapshot)', async () => {\r\n  const { container } = await render(<PageTitle />);\r\n\r\n  expect(container).toMatchInlineSnapshot(\\`\r\n    <div>\r\n      <h1\r\n        class=&quot;MuiTypography-root MuiTypography-h4 css-1lnl64-MuiTypography-root&quot;\r\n      >\r\n        상품 리스트\r\n      </h1>\r\n      <div\r\n        style=&quot;position: fixed; z-index: 9999; top: 16px; left: 16px; right: 16px; bottom: 16px; pointer-events: none;&quot;\r\n      />\r\n    </div>\r\n  \\`);\r\n});\r\n\r\nit('pageTitle 스냅샷 테스트(toMatchSnapshot)', async () => {\r\n  const { container } = await render(<PageTitle />);\r\n\r\n  expect(container).toMatchSnapshot();\r\n});`, `76849510130338780000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> PageTitle <span class=\"token keyword\">from</span> <span class=\"token string\">'@/pages/cart/components/PageTitle'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> render <span class=\"token keyword\">from</span> <span class=\"token string\">'@/utils/test/render'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pageTitle 스냅샷 테스트(toMatchInlineSnapshot)'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>PageTitle <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    &lt;div>\r\n      &lt;h1\r\n        class=\"MuiTypography-root MuiTypography-h4 css-1lnl64-MuiTypography-root\"\r\n      >\r\n        상품 리스트\r\n      &lt;/h1>\r\n      &lt;div\r\n        style=\"position: fixed; z-index: 9999; top: 16px; left: 16px; right: 16px; bottom: 16px; pointer-events: none;\"\r\n      />\r\n    &lt;/div>\r\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pageTitle 스냅샷 테스트(toMatchSnapshot)'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>PageTitle <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">toMatchSnapshot</code>은 아래와 같이 별도 파일을 생성해 저장</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"99409179121611920000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// __snapshots__/PageTitle.spec.jsx.snap\r\nexports[\\`pageTitle 스냅샷 테스트(toMatchSnapshot) 1\\`] = \\`\r\n<div>\r\n  <h1\r\n    class=&quot;MuiTypography-root MuiTypography-h4 css-1lnl64-MuiTypography-root&quot;\r\n  >\r\n    상품 리스트\r\n  </h1>\r\n  <div\r\n    style=&quot;position: fixed; z-index: 9999; top: 16px; left: 16px; right: 16px; bottom: 16px; pointer-events: none;&quot;\r\n  />\r\n</div>\r\n\\`;`, `99409179121611920000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// __snapshots__/PageTitle.spec.jsx.snap</span>\r\nexports<span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">pageTitle 스냅샷 테스트(toMatchSnapshot) 1</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n&lt;div>\r\n  &lt;h1\r\n    class=\"MuiTypography-root MuiTypography-h4 css-1lnl64-MuiTypography-root\"\r\n  >\r\n    상품 리스트\r\n  &lt;/h1>\r\n  &lt;div\r\n    style=\"position: fixed; z-index: 9999; top: 16px; left: 16px; right: 16px; bottom: 16px; pointer-events: none;\"\r\n  />\r\n&lt;/div>\r\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-이후-스냅샷-테스트-실행\" style=\"position:relative;\"><a href=\"#3-%EC%9D%B4%ED%9B%84-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89\" aria-label=\"3 이후 스냅샷 테스트 실행 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 이후 스냅샷 테스트 실행</h3>\n<p>이후 스냅샷 테스트를 실행 시, 기존의 스냅샷과 같은지 검증한다.<br>\n이때 테스트 실패시(새롭게 생성된 스냅샷 기존의 스냅샷과 다른 경우) 새롭게 생성된 스냅샷(변경 된 스냅샷)을 기준으로 삼을지 결정한다.</p>\n<h2 id=\"2-함수-스냅샷-테스트\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"2 함수 스냅샷 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수 스냅샷 테스트</h2>\n<p>스냅샷 테스트는 UI 컴포넌트 뿐만 아니라 함수의 반환값에 대해서도 테스트 할 수 있다.<br>\n주로 함수의 반환값이 복잡한 경우, 스냅샷 테스트를 하면 편리하다.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"49533274958759790000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`  it('단일 인자로 전달된 키의 값을 객체에 담아 반환한다(snapshots)', () => {\r\n    const obj = {\r\n      a: 'A',\r\n      b: { c: 'C' },\r\n      d: null,\r\n    };\r\n\r\n    expect(pick(obj, 'a')).toMatchInlineSnapshot(\\`\r\n      {\r\n        &quot;a&quot;: &quot;A&quot;,\r\n      }\r\n    \\`);\r\n  });`, `49533274958759790000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'단일 인자로 전달된 키의 값을 객체에 담아 반환한다(snapshots)'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token string\">'C'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token literal-property property\">d</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchInlineSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n      {\r\n        \"a\": \"A\",\r\n      }\r\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>검증해야할 키가 많아질 경우 스냅샷 테스트시 다른 <code class=\"language-text\">Matcher</code>를 사용하는 것 보다 직렬화된 문자열을 통해 검증하는 것이 편리하다.</p>\n<h2 id=\"3-스냅샷-테스트-한계\" style=\"position:relative;\"><a href=\"#3-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%9C%EA%B3%84\" aria-label=\"3 스냅샷 테스트 한계 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 스냅샷 테스트 한계</h2>\n<ol>\n<li>간단한 DOM 구조에만 적용 가능</li>\n</ol>\n<ul>\n<li>너무 길어지는 코드에 가독성 저하</li>\n</ul>\n<ol start=\"2\">\n<li>휴먼 에러 발생</li>\n</ol>\n<ul>\n<li><code class=\"language-text\">u</code>를 눌러 새로운 스냅샷을 기존 스냅샷으로 변경만 하면 테스트가 통과되어 버리면서 개인에 따라 무분별하게 스냅샷이 변경될 수 있음</li>\n</ul>\n<ol start=\"3\">\n<li>실제 UI 렌더링은 테스트 불가능</li>\n</ol>\n<ul>\n<li>CSS로 인해 UI가 변경되는 경우는 실제 렌더링시에만 확인 가능하며 스냅샷 테스트로는 확인 불가능</li>\n</ul>\n<ol start=\"4\">\n<li>TDD 방식의 테스트에 맞지 않음</li>\n</ol>\n<ul>\n<li>스냅샷 테스트의 TDD를 위한 문자열을 직접 작성하는 것은 거의 불가능</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#0-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\">0. 들어가며</a></p>\n</li>\n<li>\n<p><a href=\"#1-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%9E%80\">1. 스냅샷 테스트란?</a></p>\n</li>\n<li>\n<p><a href=\"#2-ui-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8\">2. UI 스냅샷 테스트</a></p>\n<ul>\n<li><a href=\"#1-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\">(1) 스냅샷 테스트 코드 작성</a></li>\n<li><a href=\"#2-%EC%B2%AB-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EB%B0%8F-%EC%8A%A4%EB%83%85%EC%83%B7-%EC%A0%80%EC%9E%A5\">(2) 첫 스냅샷 테스트 실행 및 스냅샷 저장</a></li>\n<li><a href=\"#3-%EC%9D%B4%ED%9B%84-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89\">(3) 이후 스냅샷 테스트 실행</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%ED%95%A8%EC%88%98-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8\">2. 함수 스냅샷 테스트</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EC%8A%A4%EB%83%85%EC%83%B7-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%9C%EA%B3%84\">3. 스냅샷 테스트 한계</a></p>\n</li>\n</ul>","frontmatter":{"title":"스냅샷 테스트","date":"2024년 01월 19일","tags":["FE","Test"]}}}]}},"pageContext":{"slug":"/lecture/프론트엔드 테스트/2024-01-20-스냅샷-테스트/","previous":{"fields":{"slug":"/lecture/프론트엔드 테스트/2024-01-20-FE-TDD/"},"frontmatter":{"categories":["프론트엔드 테스트"],"title":"FE TDD","date":"2024-01-20 02:00:00 +0900","tags":["FE","Test","TDD"]}},"next":{"fields":{"slug":"/lecture/프론트엔드 테스트/2024-01-20-스토리북/"},"frontmatter":{"categories":["프론트엔드 테스트"],"title":"스토리북","date":"2024-01-20 05:00:00 +0900","tags":["FE","Test"]}}}},"staticQueryHashes":[],"slicesMap":{}}