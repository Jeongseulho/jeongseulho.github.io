{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/프론트엔드 테스트/2024-01-28-Cypress-2/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2 id=\"0-들어가며\" style=\"position:relative;\"><a href=\"#0-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\" aria-label=\"0 들어가며 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 들어가며</h2>\n<p><code class=\"language-text\">Cypress</code>를 통한 E2E 테스트에 대해 정리 2편</p>\n<h2 id=\"1-커스텀-커맨드와-커스텀-쿼리\" style=\"position:relative;\"><a href=\"#1-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BF%BC%EB%A6%AC\" aria-label=\"1 커스텀 커맨드와 커스텀 쿼리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 커스텀 커맨드와 커스텀 쿼리</h2>\n<p>반복 로직을 명령으로 만들고 사용하는 기능이다, 주로 다음과 같은 상황에서 사용</p>\n<ol>\n<li>동일한 요소를 반복해서 조회</li>\n<li>동일한 내용을 반복해서 검증</li>\n<li>테스트 구동을 위한 환경 설정(로그인 등)</li>\n</ol>\n<h3 id=\"1-커스텀-커맨드\" style=\"position:relative;\"><a href=\"#1-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A4%EB%A7%A8%EB%93%9C\" aria-label=\"1 커스텀 커맨드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 커스텀 커맨드</h3>\n<ul>\n<li>retry ability 미지원</li>\n<li>비동기 동작 가능</li>\n</ul>\n<h3 id=\"2-커스텀-쿼리\" style=\"position:relative;\"><a href=\"#2-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BF%BC%EB%A6%AC\" aria-label=\"2 커스텀 쿼리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 커스텀 쿼리</h3>\n<ul>\n<li>retry ability 지원</li>\n<li>동기적으로 동작</li>\n<li>subject를 받아 내부적으로 체이닝 코드 재시도</li>\n</ul>\n<h3 id=\"3-커스텀-커맨드와-커스텀-쿼리의-예시\" style=\"position:relative;\"><a href=\"#3-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BF%BC%EB%A6%AC%EC%9D%98-%EC%98%88%EC%8B%9C\" aria-label=\"3 커스텀 커맨드와 커스텀 쿼리의 예시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 커스텀 커맨드와 커스텀 쿼리의 예시</h3>\n<ul>\n<li>작성 예시</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"78576078768388000000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`// cypress/support/commands.js\r\nimport '@testing-library/cypress/add-commands';\r\n\r\n// 로그인 커스텀 커맨드\r\nCypress.Commands.add('login', () => {\r\n  const username = 'maria@mail.com';\r\n  const password = '12345';\r\n\r\n  // 쿠키, 로컬 스토리지, 세션 스토리지에 있는 정보들을 캐싱\r\n  cy.session(username, () => {\r\n    cy.visit('/login');\r\n\r\n    cy.findByLabelText('이메일').type(username);\r\n    cy.findByLabelText('비밀번호').type(password);\r\n    cy.findByLabelText('로그인').click();\r\n\r\n    // 캐싱하기 전에 로그인이 성공했는지 확인\r\n    cy.location('pathname').should('eq', '/');\r\n  });\r\n\r\n  // 로그인 이후 메인 홈페이지로 이동\r\n  cy.visit('/');\r\n});\r\n\r\n// 로그아웃 커스텀 커맨드\r\nCypress.Commands.add('logout', () => {\r\n  cy.findByRole('button', { name: 'Maria' }).click();\r\n  cy.findByRole('button', { name: '확인' }).click();\r\n});\r\n\r\n// 현재 URL 단언 커스텀 커맨드\r\nCypress.Commands.add('assertUrl', url => {\r\n  cy.url().should('eq', \\`\\${Cypress.env('baseUrl')}\\${url}\\`);\r\n});\r\n\r\n// 특정 인덱스의 상품 카드를 가져오는 커스텀 커맨드\r\nCypress.Commands.add('getProductCardByIndex', index => {\r\n  return cy.findAllByTestId('product-card').eq(index);\r\n});\r\n\r\n// 장바구니 버튼을 가져오는 커스텀 쿼리\r\nCypress.Commands.addQuery('getCartButton', () => {\r\n  // 비동기이기 때문에 cy.now()로 쿼리(get)을 감싼 후 사용하면 inner function에서 사용 가능 \r\n  const getFn = cy.now('get', \\`[data-testid=&quot;cart-icon&quot;]\\`);\r\n\r\n  // inner function을 리턴하는 형태로 콜백을 사용\r\n  // 체이닝을 위해 subject를 인자로 받음\r\n  return subject => {\r\n    // data-testid=&quot;cart-icon&quot; 요소를 조회하는 get 쿼리\r\n    // subject 기준으로\r\n    const btn = getFn(subject);\r\n\r\n    return btn;\r\n  };\r\n});`, `78576078768388000000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// cypress/support/commands.js</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@testing-library/cypress/add-commands'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 로그인 커스텀 커맨드</span>\r\nCypress<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> <span class=\"token string\">'maria@mail.com'</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> password <span class=\"token operator\">=</span> <span class=\"token string\">'12345'</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token comment\">// 쿠키, 로컬 스토리지, 세션 스토리지에 있는 정보들을 캐싱</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">session</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이메일'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'로그인'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">// 캐싱하기 전에 로그인이 성공했는지 확인</span>\r\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">location</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pathname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eq'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token comment\">// 로그인 이후 메인 홈페이지로 이동</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 로그아웃 커스텀 커맨드</span>\r\nCypress<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'logout'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Maria'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'확인'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 현재 URL 단언 커스텀 커맨드</span>\r\nCypress<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assertUrl'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">url</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eq'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Cypress<span class=\"token punctuation\">.</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string\">'baseUrl'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 특정 인덱스의 상품 카드를 가져오는 커스텀 커맨드</span>\r\nCypress<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getProductCardByIndex'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">index</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">findAllByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'product-card'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 장바구니 버튼을 가져오는 커스텀 쿼리</span>\r\nCypress<span class=\"token punctuation\">.</span>Commands<span class=\"token punctuation\">.</span><span class=\"token function\">addQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getCartButton'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// 비동기이기 때문에 cy.now()로 쿼리(get)을 감싼 후 사용하면 inner function에서 사용 가능 </span>\r\n  <span class=\"token keyword\">const</span> getFn <span class=\"token operator\">=</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[data-testid=\"cart-icon\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token comment\">// inner function을 리턴하는 형태로 콜백을 사용</span>\r\n  <span class=\"token comment\">// 체이닝을 위해 subject를 인자로 받음</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token parameter\">subject</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// data-testid=\"cart-icon\" 요소를 조회하는 get 쿼리</span>\r\n    <span class=\"token comment\">// subject 기준으로</span>\r\n    <span class=\"token keyword\">const</span> btn <span class=\"token operator\">=</span> <span class=\"token function\">getFn</span><span class=\"token punctuation\">(</span>subject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">return</span> btn<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>사용 예시</li>\n</ul>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"45896223477922505000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`it('성공적으로 로그인 되었을 경우 메인 홈 페이지로 이동하며, 사용자 이름 &quot;Maria&quot;와 장바구니 아이콘이 노출된다', () => {\r\n  // 로그인 커스텀 커맨드 사용\r\n  cy.login();\r\n\r\n  // 현재 URL 단언 커스텀 커맨드 사용\r\n  cy.assertUrl('/');\r\n\r\n  cy.findByText('Maria').should('exist');\r\n  cy.findByTestId('cart-icon').should('exist');\r\n});\r\n\r\n  describe('로그인 시', () => {\r\n    // cy.session을 사용하여 처음 로그인을 한번만 수행하면 이후로 캐싱하여 사용\r\n    beforeEach(() => {\r\n      cy.login();\r\n    });\r\n\r\n    ...\r\n  });`, `45896223477922505000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성공적으로 로그인 되었을 경우 메인 홈 페이지로 이동하며, 사용자 이름 \"Maria\"와 장바구니 아이콘이 노출된다'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// 로그인 커스텀 커맨드 사용</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token comment\">// 현재 URL 단언 커스텀 커맨드 사용</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">assertUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Maria'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByTestId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cart-icon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'로그인 시'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// cy.session을 사용하여 처음 로그인을 한번만 수행하면 이후로 캐싱하여 사용</span>\r\n    <span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      cy<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token operator\">...</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"2-e2e-테스트에서-모킹\" style=\"position:relative;\"><a href=\"#2-e2e-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EB%AA%A8%ED%82%B9\" aria-label=\"2 e2e 테스트에서 모킹 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. E2E 테스트에서 모킹</h2>\n<p>회원가입을 테스트 할 때, 몇 가지 문제가 발생</p>\n<ol>\n<li>이전의 가입한 테스트 계정과 매번 중복되지 않는 계정을 생성해야 함</li>\n<li>계속 가입을 하다보면 DB에 불필요한 데이터가 쌓임</li>\n</ol>\n<p>이러한 문제로 인하여 회원가입과 탈퇴를 같이 한 프로세스로 테스트하는 것이 좋으나 회원가입만 성공하고 탈퇴가 실패하는 경우가 있을 수 있음<br>\n이렇게 불가피한 경우 <code class=\"language-text\">cy.intercept</code>로 모킹하여 테스트를 진행<br>\n이외에도 다양한 상황에서 모킹을 사용할 수 있음</p>\n<h3 id=\"1-e2e-테스트에서-모킹을-사용하는-경우\" style=\"position:relative;\"><a href=\"#1-e2e-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EB%AA%A8%ED%82%B9%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"1 e2e 테스트에서 모킹을 사용하는 경우 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) E2E 테스트에서 모킹을 사용하는 경우</h3>\n<ol>\n<li>실패 케이스를 테스트하는 경우</li>\n<li>서드파티 API 또는 외부 서비스를 사용하는 경우</li>\n<li>DB에 영향을 주는 경우</li>\n</ol>\n<h3 id=\"2-cyintercept-사용-예시\" style=\"position:relative;\"><a href=\"#2-cyintercept-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"2 cyintercept 사용 예시 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) cy.intercept 사용 예시</h3>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"90437571511647600000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`it('성공적으로 회원 가입이 완료되었을 경우 &quot;가입 성공!&quot;문구가 노출되며 로그인 페이지로 이동한다', () => {\r\n  cy.intercept('POST', 'http://localhost:3000/users', { statusCode: 200 });\r\n\r\n  cy.findByLabelText('이름').type('hanjung');\r\n  cy.findByLabelText('이메일').type('han@email.com');\r\n  cy.findByLabelText('비밀번호').type('password123');\r\n\r\n  cy.findByText('가입').click();\r\n\r\n  cy.findByText('가입 성공!').should('exist');\r\n  cy.assertUrl('/login');\r\n});\r\n\r\nit('회원 가입이 실패했을 경우 &quot;잠시 문제가 발생했습니다! 다시 시도해 주세요.&quot; 문구가 노출된다', () => {\r\n  cy.intercept('POST', 'http://localhost:3000/users', { statusCode: 401 });\r\n\r\n  cy.findByLabelText('이름').type('hanjung');\r\n  cy.findByLabelText('이메일').type('han@email.com');\r\n  cy.findByLabelText('비밀번호').type('password123');\r\n\r\n  cy.findByText('가입').click();\r\n\r\n  cy.findByText('잠시 문제가 발생했습니다! 다시 시도해 주세요.').should(\r\n    'exist',\r\n  );\r\n});`, `90437571511647600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성공적으로 회원 가입이 완료되었을 경우 \"가입 성공!\"문구가 노출되며 로그인 페이지로 이동한다'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:3000/users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hanjung'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이메일'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'han@email.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'가입'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'가입 성공!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">assertUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'회원 가입이 실패했을 경우 \"잠시 문제가 발생했습니다! 다시 시도해 주세요.\" 문구가 노출된다'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">intercept</span><span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:3000/users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">401</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hanjung'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'이메일'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'han@email.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByLabelText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'비밀번호'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'가입'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'잠시 문제가 발생했습니다! 다시 시도해 주세요.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span>\r\n    <span class=\"token string\">'exist'</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"3-cypress-github-action에-적용하기\" style=\"position:relative;\"><a href=\"#3-cypress-github-action%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"3 cypress github action에 적용하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. cypress Github Action에 적용하기</h2>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"165719659608742900\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"📋  코드를 복사했습니다.\"\n              data-toaster-duration=\"3000\"\n              onClick=\"copyToClipboard(`# .github/workflows/cypress.yml\r\nname: 'Cypress Tests'\r\non: push\r\njobs:\r\n  cypress-test:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v3\r\n        with:\r\n          fetch-depth: 0\r\n      - uses: actions/setup-node@v3\r\n        with:\r\n          node-version: 19\r\n      - name: Install dependencies\r\n        run: npm ci\r\n      - name: Cypress run\r\n        uses: cypress-io/github-action@v5\r\n        with:\r\n          build: npm run build\r\n          start: npm run dev`, `165719659608742900`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                copy<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" viewBox=\"0 0 24 24\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"></path><rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\"></rect></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># .github/workflows/cypress.yml</span>\r\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Cypress Tests'</span>\r\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\r\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">cypress-test</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\r\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\r\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">fetch-depth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v3\r\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19</span>\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\r\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\r\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cypress run\r\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> cypress<span class=\"token punctuation\">-</span>io/github<span class=\"token punctuation\">-</span>action@v5\r\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\r\n          <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> npm run build\r\n          <span class=\"token key atrule\">start</span><span class=\"token punctuation\">:</span> npm run dev</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#0-%EB%93%A4%EC%96%B4%EA%B0%80%EB%A9%B0\">0. 들어가며</a></p>\n</li>\n<li>\n<p><a href=\"#1-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BF%BC%EB%A6%AC\">1. 커스텀 커맨드와 커스텀 쿼리</a></p>\n<ul>\n<li><a href=\"#1-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A4%EB%A7%A8%EB%93%9C\">(1) 커스텀 커맨드</a></li>\n<li><a href=\"#2-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BF%BC%EB%A6%AC\">(2) 커스텀 쿼리</a></li>\n<li><a href=\"#3-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A4%EB%A7%A8%EB%93%9C%EC%99%80-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BF%BC%EB%A6%AC%EC%9D%98-%EC%98%88%EC%8B%9C\">(3) 커스텀 커맨드와 커스텀 쿼리의 예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-e2e-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EB%AA%A8%ED%82%B9\">2. E2E 테스트에서 모킹</a></p>\n<ul>\n<li><a href=\"#1-e2e-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EB%AA%A8%ED%82%B9%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\">(1) E2E 테스트에서 모킹을 사용하는 경우</a></li>\n<li><a href=\"#2-cyintercept-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\">(2) cy.intercept 사용 예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-cypress-github-action%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">3. cypress Github Action에 적용하기</a></p>\n</li>\n</ul>","frontmatter":{"title":"Cypress 2","date":"2024년 01월 27일","tags":["FE","Test"]}}}]}},"pageContext":{"slug":"/lecture/프론트엔드 테스트/2024-01-28-Cypress-2/","previous":{"fields":{"slug":"/lecture/프론트엔드 테스트/2024-01-21-Cypress/"},"frontmatter":{"categories":["프론트엔드 테스트"],"title":"Cypress","date":"2024-01-21 04:00:00 +0900","tags":["FE","Test"]}},"next":{"fields":{"slug":"/lecture/프론트엔드 테스트/2024-01-28-테스트-더블이란/"},"frontmatter":{"categories":["프론트엔드 테스트"],"title":"테스트 더블이란","date":"2024-01-28 05:00:00 +0900","tags":["FE","Test"]}}}},"staticQueryHashes":[],"slicesMap":{}}