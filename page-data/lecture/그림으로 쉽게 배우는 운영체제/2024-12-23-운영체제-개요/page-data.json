{"componentChunkName":"component---src-templates-lecture-template-tsx","path":"/lecture/그림으로 쉽게 배우는 운영체제/2024-12-23-운영체제-개요/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"운영체제의-역할\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EC%9D%98-%EC%97%AD%ED%95%A0\" aria-label=\"운영체제의 역할 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제의 역할</h1>\n<ul>\n<li>프로세스 관리 : 여러 프로세스를 동시에 실행하도록 제어</li>\n<li>메모리 관리 : 메모리를 효율적으로 사용할 수 있도록</li>\n<li>하드웨어 관리 : 입출력 장치와의 인터페이스 제공</li>\n<li>파일 관리 : 하드에 효율적으로 파일을 저장</li>\n</ul>\n<h1 id=\"커널\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%84%90\" aria-label=\"커널 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커널</h1>\n<ul>\n<li>프로세스, 메모리, 하드디스크를 관리하는 핵심 부분</li>\n<li>커널에 접근하기 위하여 다양한 인터페이스 존재\n<ul>\n<li>CLI : 명령어를 통해 커널에 접근(Linux, Unix)</li>\n<li>GUI : 그래픽을 통해 커널에 접근(윈도우, 맥OS)</li>\n<li>System Call : 어플리케이션에서 커널에 접근하기 위한 인터페이스</li>\n<li>드라이버 : 하드웨어에서 커널에 접근하기 위한 인터페이스</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"폰-노이만-구조프로그램-내장-방식\" style=\"position:relative;\"><a href=\"#%ED%8F%B0-%EB%85%B8%EC%9D%B4%EB%A7%8C-%EA%B5%AC%EC%A1%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%82%B4%EC%9E%A5-%EB%B0%A9%EC%8B%9D\" aria-label=\"폰 노이만 구조프로그램 내장 방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폰 노이만 구조(프로그램 내장 방식)</h1>\n<ul>\n<li>기존에는 하드웨어로 프로그램을 구현 => 프로그램 변경 시 하드웨어(스위치, 배선 등) 변경 필요</li>\n<li>폰 노이만 구조는 프로그램을 메모리에 올리고 버스를 통해 CPU와 연결하는 구조</li>\n</ul>\n<h1 id=\"cpu-구조\" style=\"position:relative;\"><a href=\"#cpu-%EA%B5%AC%EC%A1%B0\" aria-label=\"cpu 구조 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CPU 구조</h1>\n<ul>\n<li>산술논리장치(ALU) : 실제 연산을 수행</li>\n<li>제어장치 : 장치들의 동작을 제어</li>\n<li>레지스터 : CPU 내부에서 사용하는 메모리</li>\n</ul>\n<h1 id=\"부팅-과정\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%8C%85-%EA%B3%BC%EC%A0%95\" aria-label=\"부팅 과정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부팅 과정</h1>\n<ol>\n<li>ROM에 저장된 BIOS가 전원이 들어오면 실행</li>\n<li>컴퓨터 장치들의 상태 확인(RAM, HDD, CPU 등)</li>\n<li>HDD에 있는 부트로더를 메모리로 가져와 실행</li>\n<li>OS를 메모리로 가져와 실행</li>\n</ol>\n<h1 id=\"프로세스와-쓰레드\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9C\" aria-label=\"프로세스와 쓰레드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스와 쓰레드</h1>\n<h2 id=\"프로세스의-메모리-구조\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0\" aria-label=\"프로세스의 메모리 구조 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스의 메모리 구조</h2>\n<ul>\n<li>코드 영역 : 실행할 프로그램의 코드가 저장</li>\n<li>데이터 영역 : 전역 변수, 정적 변수</li>\n<li>힙 영역 : 런타임에 필요시 동적으로 할당되는 부분</li>\n<li>스택 영역 : 함수 관련한 정보(지역변수, 매개변수, 리턴값, 함수 종료 후 돌아갈 주소)</li>\n</ul>\n<h2 id=\"멀티-프로그래밍과-멀티-프로세싱\" style=\"position:relative;\"><a href=\"#%EB%A9%80%ED%8B%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%A9%80%ED%8B%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8B%B1\" aria-label=\"멀티 프로그래밍과 멀티 프로세싱 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티 프로그래밍과 멀티 프로세싱</h2>\n<ul>\n<li>멀티 프로그래밍 : 메모리에 여러 프로세스를 동시에 올림</li>\n<li>멀티 프로세싱 : CPU가 시분할하여 여러 프로세스를 동시에 실행</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EC%9D%98-%EC%97%AD%ED%95%A0\">운영체제의 역할</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BB%A4%EB%84%90\">커널</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%8F%B0-%EB%85%B8%EC%9D%B4%EB%A7%8C-%EA%B5%AC%EC%A1%B0%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%82%B4%EC%9E%A5-%EB%B0%A9%EC%8B%9D\">폰 노이만 구조(프로그램 내장 방식)</a></p>\n</li>\n<li>\n<p><a href=\"#cpu-%EA%B5%AC%EC%A1%B0\">CPU 구조</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B6%80%ED%8C%85-%EA%B3%BC%EC%A0%95\">부팅 과정</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9C\">프로세스와 쓰레드</a></p>\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0\">프로세스의 메모리 구조</a></li>\n<li><a href=\"#%EB%A9%80%ED%8B%B0-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%EB%A9%80%ED%8B%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8B%B1\">멀티 프로그래밍과 멀티 프로세싱</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"운영체제 개요","date":"2024년 12월 22일","tags":["CS"]}}}]}},"pageContext":{"slug":"/lecture/그림으로 쉽게 배우는 운영체제/2024-12-23-운영체제-개요/","previous":null,"next":{"fields":{"slug":"/lecture/그림으로 쉽게 배우는 운영체제/2025-01-04-CPU-스케줄링/"},"frontmatter":{"categories":["그림으로 쉽게 배우는 운영체제"],"title":"CPU 스케줄링","date":"2025-01-04 01:00:00 +0900","tags":["CS"]}}}},"staticQueryHashes":[],"slicesMap":{}}