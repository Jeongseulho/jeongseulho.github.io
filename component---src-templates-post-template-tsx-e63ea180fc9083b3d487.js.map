{"version":3,"file":"component---src-templates-post-template-tsx-e63ea180fc9083b3d487.js","mappings":"8OAWA,MAAMA,GAAYC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,yFAOdE,EAAAA,GAAAA,GAAa,yBAyBjB,MApBoBC,IAA4C,IAA3C,UAAEC,EAAS,KAAEC,GAAwBF,EACxD,OACEG,EAAAA,EAAAA,IAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,IAACP,EAAY,MACXO,EAAAA,EAAAA,IAACE,EAAAA,EAAW,CACVC,MAAO,CACLC,OAAQ,QACRC,UAAW,UACXC,aAAc,QAEhBC,QAAQ,OACRC,MAAOV,EACPW,IAAI,gBAGRT,EAAAA,EAAAA,IAACU,EAAAA,EAAgB,CAACC,wBAAyB,CAAEC,OAAQb,KACpD,E,oBClCP,MAAMc,GAAOnB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAoB,KAAA,UAAAC,OAAA,oHAUPC,GAAItB,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,kJASmBG,IAAA,IAAC,MAAEoB,GAAOpB,EAAA,OAAKoB,EAAMC,OAAOC,SAAS,IAAI,QAGhEC,GAAG1B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,iJAWE2B,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAMC,OAAOC,SAAS,IAAI,yBAC9BG,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAAKL,EAAMC,OAAOC,SAAS,IAAI,gCAGvCI,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMC,OAAOC,SAAS,IAAI,SAI3DK,GAAS9B,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAoB,KAAA,SAAAC,OAAA,gHAUTU,GAAW/B,EAAAA,EAAAA,GAAA,KAAAC,OAAA,aAAAD,CAAA,6GAMKgC,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMC,OAAOS,QAAQ,IAAI,cACnDC,IAAA,IAAC,MAAEX,GAAOW,EAAA,OAAKX,EAAMC,OAAOS,QAAQE,OAAO,oFAMzCC,IAAA,IAAC,MAAEb,GAAOa,EAAA,OAAKb,EAAMC,OAAOS,QAAQE,OAAO,sEAkDxD,MAhCsBE,IAAmD,IAAlD,KAAEC,EAAI,SAAEC,EAAQ,KAAEC,GAA0BH,EACjE,OACE/B,EAAAA,EAAAA,IAACa,EAAO,MACNb,EAAAA,EAAAA,IAACgB,EAAI,KACFkB,EAAKC,KAAI,CAACC,EAAKC,KACdrC,EAAAA,EAAAA,IAACsC,EAAAA,KAAI,CAACC,GAAE,SAAWH,EAAOI,IAAQJ,EAAG,IAAIC,IACvCrC,EAAAA,EAAAA,IAACoB,EAAG,KAAEgB,QAIZpC,EAAAA,EAAAA,IAACwB,EAAS,MACRxB,EAAAA,EAAAA,IAAA,WACgB,OAAbiC,IACCjC,EAAAA,EAAAA,IAACyB,EAAW,CAACgB,KAAMR,EAASS,OAAOC,OACjC3C,EAAAA,EAAAA,IAAA,gBAAW,MACViC,EAASW,YAAYC,SAI5B7C,EAAAA,EAAAA,IAAA,WACY,OAATgC,IACChC,EAAAA,EAAAA,IAACyB,EAAW,CAACgB,KAAMT,EAAKU,OAAOC,MAC5BX,EAAKY,YAAYC,OAClB7C,EAAAA,EAAAA,IAAA,YAAM,KAAY,QAKlB,EC9Cd,MA1C2D,SAAAH,GAIrC,IAJ+C,KACnEiD,EAAI,YACJC,EAAW,SACXC,GACkBnD,EAClB,MAAM,SAAEoC,EAAQ,KAAED,GAASe,GAEzBE,MAAM,KACJlD,EACA6C,aAAa,MACXC,EAAK,QACLK,EAAO,KACPC,EAAI,KACJjB,EACApC,WACEsD,iBAAiB,gBAAEC,GAAiB,UACpCC,MAIJR,EAAKS,kBAAkBC,MAAM,GAEjC,OACExD,EAAAA,EAAAA,IAACyD,EAAAA,EAAU,CACTC,KAAM,IACNC,KAAM,CACJd,QACAe,YAAaV,EACbW,IAAKb,EAASP,KACdjC,MAAO8C,KAGTtD,EAAAA,EAAAA,IAAC8D,EAAAA,EAAU,MACT9D,EAAAA,EAAAA,IAAC+D,EAAAA,EAAW,CAAClB,MAAOA,EAAOM,KAAMA,KACjCnD,EAAAA,EAAAA,IAACgE,EAAW,CAACjE,KAAMA,EAAMD,UAAWuD,KACpCrD,EAAAA,EAAAA,IAACiE,EAAa,CAAChC,SAAUA,EAAUD,KAAMA,EAAME,KAAMA,KACrDlC,EAAAA,EAAAA,IAACkE,EAAAA,EAAa,OAItB,C","sources":["webpack://seulog/./src/components/Detail/ContentBody.tsx","webpack://seulog/./src/components/Detail/ContentFooter.tsx","webpack://seulog/./src/templates/post_template.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { mediaQuery } from 'theme/index';\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport { MarkdownRenderer } from './styles/code.styles';\r\n\r\ninterface ContentBodyProps {\r\n  html: string;\r\n  thumbnail: IGatsbyImageData;\r\n}\r\n\r\nconst ImageWrapper = styled.div`\r\n  margin: 0 auto;\r\n  margin-bottom: 60px;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n  isolation: isolate;\r\n\r\n  ${mediaQuery.sm} {\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst ContentBody = ({ thumbnail, html }: ContentBodyProps) => {\r\n  return (\r\n    <>\r\n      <ImageWrapper>\r\n        <GatsbyImage\r\n          style={{\r\n            height: '328px',\r\n            objectFit: 'contain',\r\n            borderRadius: '20px',\r\n          }}\r\n          loading=\"lazy\"\r\n          image={thumbnail}\r\n          alt=\"thumbnail\"\r\n        />\r\n      </ImageWrapper>\r\n      <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentBody;\r\n","import styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport { PageContextType } from '../../@types/Post.types';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n\r\n  width: 100%;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  gap: 16px;\r\n\r\n  width: 100%;\r\n  padding-bottom: 60px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.bluegray[100]};\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  height: 28px;\r\n  border-radius: 100px;\r\n  padding: 0px 16px;\r\n\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.colors.bluegray[800]};\r\n  background-color: ${({ theme }) => theme.colors.bluegray[100]};\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.bluegray[200]};\r\n  }\r\n`;\r\n\r\nconst FooterNav = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  width: 100%;\r\n  margin-top: 60px;\r\n`;\r\n\r\nconst ContentLink = styled.a`\r\n  display: inline-block;\r\n  padding: 10px 12px;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  background-color: ${({ theme }) => theme.colors.primary[600]};\r\n  color: ${({ theme }) => theme.colors.primary.default};\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  & span {\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    color: ${({ theme }) => theme.colors.primary.default};\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.025);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\ninterface ContentFooterProps {\r\n  previous: PageContextType | null;\r\n  next: PageContextType | null;\r\n  tags: string[];\r\n}\r\n\r\nconst ContentFooter = ({ next, previous, tags }: ContentFooterProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Tags>\r\n        {tags.map((tag, index) => (\r\n          <Link to={`/?tag=${tag}`} key={`${tag}_${index}`}>\r\n            <Tag>{tag}</Tag>\r\n          </Link>\r\n        ))}\r\n      </Tags>\r\n      <FooterNav>\r\n        <nav>\r\n          {previous !== null && (\r\n            <ContentLink href={previous.fields.slug}>\r\n              <span>{`<`}&nbsp;&nbsp;</span>\r\n              {previous.frontmatter.title}\r\n            </ContentLink>\r\n          )}\r\n        </nav>\r\n        <nav>\r\n          {next !== null && (\r\n            <ContentLink href={next.fields.slug}>\r\n              {next.frontmatter.title}\r\n              <span>&nbsp;&nbsp;{`>`}</span>\r\n            </ContentLink>\r\n          )}\r\n        </nav>\r\n      </FooterNav>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContentFooter;\r\n","import React, { FunctionComponent } from 'react';\r\nimport BaseLayout from 'layout/BaseLayout';\r\nimport PostLayout from 'layout/PostLayout';\r\nimport ContentHead from 'components/Detail/ContentHead';\r\nimport ContentBody from 'components/Detail/ContentBody';\r\nimport CommentWidget from 'components/Detail/CommentWidget';\r\nimport ContentFooter from 'components/Detail/ContentFooter';\r\nimport { PostPageItemType, PageContextType } from 'types/Post.types';\r\nimport { graphql } from 'gatsby';\r\n\r\ntype PostTemplateProps = {\r\n  path: string;\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[];\r\n    };\r\n  };\r\n  pageContext: {\r\n    slug: string;\r\n    previous: PageContextType | null;\r\n    next: PageContextType | null;\r\n  };\r\n  location: {\r\n    href: string;\r\n  };\r\n};\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data,\r\n  pageContext,\r\n  location,\r\n}: PostTemplateProps) {\r\n  const { previous, next } = pageContext;\r\n  const {\r\n    node: {\r\n      html,\r\n      frontmatter: {\r\n        title,\r\n        summary,\r\n        date,\r\n        tags,\r\n        thumbnail: {\r\n          childImageSharp: { gatsbyImageData },\r\n          publicURL,\r\n        },\r\n      },\r\n    },\r\n  } = data.allMarkdownRemark.edges[0];\r\n\r\n  return (\r\n    <BaseLayout\r\n      path={'/'}\r\n      meta={{\r\n        title,\r\n        description: summary,\r\n        url: location.href,\r\n        image: publicURL,\r\n      }}\r\n    >\r\n      <PostLayout>\r\n        <ContentHead title={title} date={date} />\r\n        <ContentBody html={html} thumbnail={gatsbyImageData} />\r\n        <ContentFooter previous={previous} next={next} tags={tags} />\r\n        <CommentWidget />\r\n      </PostLayout>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          tableOfContents\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY년 MM월 DD일\")\r\n            tags\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["ImageWrapper","_styled","target","mediaQuery","_ref","thumbnail","html","___EmotionJSX","React","GatsbyImage","style","height","objectFit","borderRadius","loading","image","alt","MarkdownRenderer","dangerouslySetInnerHTML","__html","Wrapper","name","styles","Tags","theme","colors","bluegray","Tag","_ref2","_ref3","_ref4","FooterNav","ContentLink","_ref5","primary","_ref6","default","_ref7","_ref8","next","previous","tags","map","tag","index","Link","to","key","href","fields","slug","frontmatter","title","data","pageContext","location","node","summary","date","childImageSharp","gatsbyImageData","publicURL","allMarkdownRemark","edges","BaseLayout","path","meta","description","url","PostLayout","ContentHead","ContentBody","ContentFooter","CommentWidget"],"sourceRoot":""}