{"version":3,"file":"component---src-templates-lecture-list-tsx-12e4fbbd1d7dc52a6b04.js","mappings":"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","sources":["webpack://seulog/./src/components/Common/NoContent.tsx","webpack://seulog/./src/layout/BaseLayout.tsx","webpack://seulog/./src/templates/lecture-list.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { theme } from 'theme/index';\r\nimport { Heading2, Subtitle } from 'styles/typography';\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding-top: 40px;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Margin = styled.div`\r\n  margin-top: -20px;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst NoContent = () => {\r\n  return (\r\n    <FlexContainer>\r\n      <Margin>\r\n        <Heading2 textColor={theme.colors.bluegray[600]}>\r\n          피드가 '텅' 비었어요\r\n        </Heading2>\r\n      </Margin>\r\n      <Subtitle textColor={theme.colors.primary[200]}>\r\n        곧 새로운 소식이 올라올지도 몰라요!\r\n      </Subtitle>\r\n    </FlexContainer>\r\n  );\r\n};\r\n\r\nexport default NoContent;\r\n","import { Global, ThemeProvider } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport { globalStyle } from 'styles';\r\nimport Footer from 'components/Navigation/Footer';\r\nimport Header from 'components/Navigation/Header';\r\nimport { theme } from 'theme/index';\r\nimport { mediaQuery } from 'theme/breakpoints';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Body = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 80px); // minus footer height\r\n  height: 100%;\r\n  padding: 0px 40px;\r\n  padding-top: 72px; // padding to header height\r\n  margin: 0 auto;\r\n  background-color: ${({ theme }) => theme.lightTheme.backgroundColor};\r\n  transition: all 0.5s ease-in-out;\r\n\r\n  ${mediaQuery.sm} {\r\n    padding: 40px 0px;\r\n    padding-top: 72px;\r\n  }\r\n`;\r\n\r\ntype BaseLayoutProps = {\r\n  path: string;\r\n  children: React.ReactNode;\r\n  meta?: {\r\n    title: string;\r\n    description: string;\r\n    image?: string;\r\n    url: string;\r\n  };\r\n};\r\n\r\nconst INITIAL_META = {\r\n  title: 'seulog',\r\n  description: '슬호의 블로그',\r\n  image: '/static/profile-image.png',\r\n  url: 'https://jeongseulho.github.io/',\r\n};\r\n\r\nconst BaseLayout = ({ path, children, meta }: BaseLayoutProps) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Helmet>\r\n        <html lang=\"ko\" />\r\n        <title>{meta ? meta.title : INITIAL_META.title}</title>\r\n        <script\r\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXX\"\r\n          crossOrigin=\"anonymous\"\r\n          async\r\n        />\r\n        <meta\r\n          name=\"google-site-verification\"\r\n          content=\"i1k9fAJNvByDpCtfnvLiC1aCfhuag46Ftm5CVnntwrI\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content={meta ? meta.description : INITIAL_META.description}\r\n        />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\r\n\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta\r\n          property=\"og:title\"\r\n          content={meta ? meta.title : INITIAL_META.title}\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={meta ? meta.description : INITIAL_META.description}\r\n        />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={meta?.image ? meta?.image : INITIAL_META.image}\r\n        />\r\n        <meta property=\"og:url\" content={meta ? meta.url : INITIAL_META.url} />\r\n        <meta\r\n          property=\"og:site_name\"\r\n          content={meta ? meta.title : INITIAL_META.title}\r\n        />\r\n      </Helmet>\r\n      <Global styles={globalStyle} />\r\n      <Header path={path} />\r\n      <Body>{children}</Body>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default BaseLayout;\r\n","import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport BaseLayout from '../layout/BaseLayout';\r\nimport { PATH } from '../routes/path';\r\nimport { Guidance2, Summary } from '../styles/typography';\r\nimport { theme } from '../theme';\r\nimport NoContent from '../components/Common/NoContent';\r\n\r\nconst LectureListWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 60px 16px;\r\n`;\r\n\r\nconst LectureHead = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 40px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.dark[50]};\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst PostGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  gap: 24px;\r\n\r\n  @media (min-width: 768px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nconst PostItem = styled(Link)`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 24px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  text-decoration: none;\r\n  color: inherit;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n\r\n    & > span {\r\n      color: ${({ theme }) => theme.colors.primary.default};\r\n      &::after {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostIndex = styled.span`\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.colors.dark[50]};\r\n  margin-right: 20px;\r\n  line-height: 1;\r\n  min-width: 40px;\r\n  display: inline-block;\r\n  transition: color 0.3s;\r\n  position: relative;\r\n\r\n  &::after {\r\n    display: block;\r\n    content: '';\r\n    width: 0;\r\n    height: 3px;\r\n    margin-bottom: 3px;\r\n    margin-top: 4px;\r\n    background-color: ${props => props.theme.colors.primary[300]};\r\n    transition: width 0.3s;\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst PostTitle = styled.h2`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  word-break: keep-all;\r\n`;\r\n\r\nconst PostDate = styled.span`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.colors.dark[100]};\r\n`;\r\n\r\nconst LectureListTemplate = ({\r\n  data,\r\n  pageContext,\r\n}: {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      nodes: any[];\r\n    };\r\n    site: {\r\n      siteMetadata: {\r\n        siteUrl: string;\r\n      };\r\n    };\r\n  };\r\n  pageContext: {\r\n    category: string;\r\n  };\r\n}) => {\r\n  const { category } = pageContext;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n\r\n  return (\r\n    <BaseLayout\r\n      path={PATH.lecture}\r\n      meta={{\r\n        title: `${category} 강의`,\r\n        description: `${category} 관련 강의 포스트 목록`,\r\n        url: `${\r\n          data.site.siteMetadata.siteUrl\r\n        }/lecture/${category.toLowerCase()}`,\r\n      }}\r\n    >\r\n      <LectureListWrapper>\r\n        <LectureHead>\r\n          <Guidance2>{category}</Guidance2>\r\n          <Summary textColor={theme.colors.dark[100]}>\r\n            {posts.length}개의 포스트\r\n          </Summary>\r\n        </LectureHead>\r\n        {posts.length > 0 ? (\r\n          <PostGrid>\r\n            {posts.map((post, index) => (\r\n              <PostItem key={post.id} to={post.fields.slug}>\r\n                <PostIndex>{String(index + 1).padStart(2, '0')}</PostIndex>\r\n                <PostContent>\r\n                  <PostTitle>{post.frontmatter.title}</PostTitle>\r\n                  <PostDate>{post.frontmatter.date}</PostDate>\r\n                </PostContent>\r\n              </PostItem>\r\n            ))}\r\n          </PostGrid>\r\n        ) : (\r\n          <NoContent />\r\n        )}\r\n      </LectureListWrapper>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default LectureListTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query LectureListQuery($category: String) {\r\n    site {\r\n      siteMetadata {\r\n        siteUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { frontmatter: { date: ASC } }\r\n      filter: {\r\n        fields: { slug: { regex: \"/lecture/\" } }\r\n        frontmatter: { categories: { in: [$category] } }\r\n      }\r\n    ) {\r\n      nodes {\r\n        id\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"YYYY.MM.DD\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["FlexContainer","_styled","target","name","styles","Margin","NoContent","___EmotionJSX","Heading2","textColor","theme","Subtitle","Body","_ref","lightTheme","backgroundColor","mediaQuery","INITIAL_META","_ref2","path","children","meta","ThemeProvider","Helmet","lang","title","src","crossOrigin","async","content","description","httpEquiv","property","image","url","Global","globalStyle","Header","Footer","LectureListWrapper","LectureHead","colors","dark","PostGrid","PostItem","Link","primary","default","PostIndex","_ref3","props","PostContent","PostTitle","PostDate","_ref4","_ref5","data","pageContext","category","posts","allMarkdownRemark","nodes","BaseLayout","PATH","site","siteMetadata","siteUrl","toLowerCase","Guidance2","Summary","length","map","post","index","key","id","to","fields","slug","String","padStart","frontmatter","date"],"sourceRoot":""}