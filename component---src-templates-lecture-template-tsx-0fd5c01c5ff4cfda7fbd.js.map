{"version":3,"file":"component---src-templates-lecture-template-tsx-0fd5c01c5ff4cfda7fbd.js","mappings":"8LA2DA,UAhCiE,SAAAA,GAIxC,IAJkD,KACzEC,EAAI,YACJC,EAAW,SACXC,GACqBH,EACrB,MAAM,SAAEI,EAAQ,KAAEC,GAASH,GAEzBI,MAAM,KACJC,EACAC,aAAa,MAAEC,EAAK,KAAEC,EAAI,KAAEC,KAE5BV,EAAKW,kBAAkBC,MAAM,GAEjC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CACTC,KAAMC,EAAAA,EAAAA,QACNC,KAAM,CACJT,QACAU,YAAaV,EACbW,IAAKjB,EAASkB,QAGhBP,EAAAA,EAAAA,IAACQ,EAAAA,EAAU,MACTR,EAAAA,EAAAA,IAACS,EAAAA,EAAW,CAACd,MAAOA,EAAOC,KAAMA,KACjCI,EAAAA,EAAAA,IAACU,EAAAA,EAAW,CAACjB,KAAMA,KACnBO,EAAAA,EAAAA,IAACW,EAAAA,EAAa,CAACrB,SAAUA,EAAUC,KAAMA,EAAMM,KAAMA,KACrDG,EAAAA,EAAAA,IAACY,EAAAA,EAAa,OAItB,C","sources":["webpack://seulog/./src/templates/lecture_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport BaseLayout from 'layout/BaseLayout';\r\nimport PostLayout from 'layout/PostLayout';\r\nimport ContentHead from 'components/Detail/ContentHead';\r\nimport ContentBody from 'components/Detail/ContentBody';\r\nimport CommentWidget from 'components/Detail/CommentWidget';\r\nimport ContentFooter from 'components/Detail/ContentFooter';\r\nimport { PostPageItemType, PageContextType } from 'types/Post.types';\r\nimport { graphql } from 'gatsby';\r\nimport { PATH } from '../routes/path';\r\ntype LectureTemplateProps = {\r\n  path: string;\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[];\r\n    };\r\n  };\r\n  pageContext: {\r\n    slug: string;\r\n    previous: PageContextType | null;\r\n    next: PageContextType | null;\r\n  };\r\n  location: {\r\n    href: string;\r\n  };\r\n};\r\n\r\nconst LectureTemplate: FunctionComponent<LectureTemplateProps> = function ({\r\n  data,\r\n  pageContext,\r\n  location,\r\n}: LectureTemplateProps) {\r\n  const { previous, next } = pageContext;\r\n  const {\r\n    node: {\r\n      html,\r\n      frontmatter: { title, date, tags },\r\n    },\r\n  } = data.allMarkdownRemark.edges[0];\r\n\r\n  return (\r\n    <BaseLayout\r\n      path={PATH.lecture}\r\n      meta={{\r\n        title,\r\n        description: title,\r\n        url: location.href,\r\n      }}\r\n    >\r\n      <PostLayout>\r\n        <ContentHead title={title} date={date} />\r\n        <ContentBody html={html} />\r\n        <ContentFooter previous={previous} next={next} tags={tags} />\r\n        <CommentWidget />\r\n      </PostLayout>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default LectureTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryLectureMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          tableOfContents\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"YYYY년 MM월 DD일\")\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","data","pageContext","location","previous","next","node","html","frontmatter","title","date","tags","allMarkdownRemark","edges","___EmotionJSX","BaseLayout","path","PATH","meta","description","url","href","PostLayout","ContentHead","ContentBody","ContentFooter","CommentWidget"],"sourceRoot":""}